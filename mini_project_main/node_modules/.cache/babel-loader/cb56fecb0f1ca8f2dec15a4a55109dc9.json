{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\containers\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport \"./App1.css\";\n/* 1. usrname 2. email \n3. password\n*/\n\nexport default function SignUpPage() {\n  _s();\n\n  let history = useHistory(); //body will send the data item but it will nto accept the data directly its need to convert it into the string\n\n  const [credentials, setCredentials] = useState({\n    name: \" \",\n    email: \"\",\n    password: \"\",\n    cpassword: \"\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password\n    } = credentials;\n    const response = await fetch(\"/api/user/cal\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    console.log(\"hello!!! \" + json);\n    console.log(json.sucess);\n\n    if (json.sucess) {\n      //save the autheotkem and redirect\n      localStorage.setItem('token', json.authtoken);\n      alert(\"User Register Sucessfully!! please login\");\n      history.push(\"/login\");\n    } else {\n      alert(\"Invalid credential\");\n    }\n  };\n\n  const onChange = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  }; //thp code\n  // const history = useHistory();\n  // const [user , setUser] = useState({\n  //     name : \"\" ,email : \"\" , password : \"\" , cpassword:\"\"\n  // })\n  // let name , value;\n  // const onChange =(e)=>{\n  //     console.log(e) ;\n  //     name =  e.target.name; //email\n  //     value = e.target.value; //zaidkhan1681@gmail.com\n  //    setUser({... user, [name] : value}) //Here i am storin the data-value to the respected place of variable\n  // }//hooks setting the value\n  // //posting data to the database\n  // const PostData = async(e) =>{\n  //     e.preventDefault(); //preventing from loading  of  dashboard\n  //     //here by using the object destructring we are not getting the data int he form of user.email or user.password \n  //     //here we are simply fetching the data input by the user\n  //     const {name , email , password , cpassword} = user //usr.name, user.email, user.pasword, object destructuring\n  //     //putting the data at the backend using fetch\n  //     //porpertiesof fetch is mthiod, header\n  //     //servre doesnt usderdtand json\n  //     const res = await fetch(\"/api/user/cal\",{\n  //         method : \"POST\" ,\n  //         header:{\n  //             \"Content-Type\" :\"application/json\"\n  //         } ,\n  //         body : JSON.stringify({\n  //             name,\n  //             email,\n  //             password,\n  //             cpassword\n  //         })\n  //     });\n  //     //checkign the data inputted by the user\n  //     const data = await res.json();\n  //     if (data.status === 400 || !data){\n  //         window.alert(\"Invalid Registration\")\n  //         console.log(\"Invalid Registration\")\n  //     }\n  //     else{\n  //         window.alert(\"Registration Success\")\n  //         console.log(\"Registration Success\")\n  //         history.push(\"/dashboard\")\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center m-5-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Create your personal account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      action: \"/home\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: onChange,\n          required: true,\n          minLength: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"cpassword\",\n          onChange: onChange,\n          required: true,\n          minLength: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: handleSubmit,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Back to homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 20\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpPage, \"JPRaEITrC8dCY4QN4ENqad7qGLQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/containers/RegisterPage.js"],"names":["React","useState","Link","useHistory","SignUpPage","history","credentials","setCredentials","name","email","password","cpassword","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","console","log","sucess","localStorage","setItem","authtoken","alert","push","onChange","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Link , useHistory} from 'react-router-dom'\n\nimport \"./App1.css\"\n\n\n/* 1. usrname 2. email \n3. password\n*/\n\nexport default function SignUpPage() {\n\n    let history = useHistory();\n \n\n    //body will send the data item but it will nto accept the data directly its need to convert it into the string\n    const [credentials , setCredentials] = useState({name: \" \" ,email: \"\" , password : \"\", cpassword : \"\"})\n\n    const handleSubmit =  async (e) =>{\n        e.preventDefault();\n        const { name, email , password} = credentials\n        const response = await fetch(\"/api/user/cal\" , {\n            method: \"POST\" ,\n            headers :{\n                'Content-Type' : 'application/json'\n            },\n            body : JSON.stringify({name , email , password})\n    \n        });\n        const json = await response.json()\n        console.log(\"hello!!! \" + json)\n        console.log(json.sucess)\n        if(json.sucess){\n            //save the autheotkem and redirect\n            localStorage.setItem('token' , json.authtoken)\n            alert(\"User Register Sucessfully!! please login\")\n            history.push(\"/login\")\n\n        }\n        else{\n            alert(\"Invalid credential\")\n        }\n    \n    }\n\n    const onChange =(e)=>{\n        setCredentials({...credentials , [e.target.name] : e.target.value})\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    //thp code\n    // const history = useHistory();\n\n\n    // const [user , setUser] = useState({\n    //     name : \"\" ,email : \"\" , password : \"\" , cpassword:\"\"\n    // })\n    // let name , value;\n    // const onChange =(e)=>{\n    //     console.log(e) ;\n    //     name =  e.target.name; //email\n    //     value = e.target.value; //zaidkhan1681@gmail.com\n    //    setUser({... user, [name] : value}) //Here i am storin the data-value to the respected place of variable\n    // }//hooks setting the value\n\n\n\n    // //posting data to the database\n    // const PostData = async(e) =>{\n    //     e.preventDefault(); //preventing from loading  of  dashboard\n    //     //here by using the object destructring we are not getting the data int he form of user.email or user.password \n    //     //here we are simply fetching the data input by the user\n    //     const {name , email , password , cpassword} = user //usr.name, user.email, user.pasword, object destructuring\n\n    //     //putting the data at the backend using fetch\n    //     //porpertiesof fetch is mthiod, header\n    //     //servre doesnt usderdtand json\n    //     const res = await fetch(\"/api/user/cal\",{\n    //         method : \"POST\" ,\n    //         header:{\n    //             \"Content-Type\" :\"application/json\"\n    //         } ,\n    //         body : JSON.stringify({\n    //             name,\n    //             email,\n    //             password,\n    //             cpassword\n    //         })\n\n    //     });\n\n    //     //checkign the data inputted by the user\n    //     const data = await res.json();\n    //     if (data.status === 400 || !data){\n    //         window.alert(\"Invalid Registration\")\n    //         console.log(\"Invalid Registration\")\n\n    //     }\n    //     else{\n    //         window.alert(\"Registration Success\")\n    //         console.log(\"Registration Success\")\n    //         history.push(\"/dashboard\")\n\n    //     }\n\n    // }\n\n    \n\n    return (\n        <div className=\"text-center m-5-auto\">\n            <h2>Join us</h2>\n            <h5>Create your personal account</h5>\n            <form method= \"POST\" action=\"/home\">\n                <p>\n                    <label>Username</label><br/> \n                    <input type=\"text\" name=\"name\"   onChange={onChange}/>\n                </p>\n                <p>\n                    <label>Email address</label><br/>\n                    <input type=\"email\" name=\"email\"  onChange={onChange}/>\n                </p>\n                <p>\n                    <label>Password</label><br/>\n                    <input type=\"password\" name=\"password\"  onChange={onChange} required minLength={5} />\n                </p>\n                <p>\n                    <label>Confirm Password</label><br/>\n                    <input type=\"password\" name=\"cpassword\"  onChange={onChange} required minLength={5} />\n                </p>\n                {/* <p>\n                    <input type=\"checkbox\" name=\"checkbox\" id=\"checkbox\" required /> <span>I agree all statements in <a href=\"https://google.com\" target=\"_blank\" rel=\"noopener noreferrer\">terms of service</a></span>.\n                </p> */}\n              <Link to=\"/dashboard\">\n                <button className=\"primary-button\" onClick={handleSubmit} >Log in</button>\n            </Link>\n            </form>\n            <footer>\n                <p><Link to=\"/\"><button>Back to homepage</button></Link>.</p>\n            </footer>\n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}