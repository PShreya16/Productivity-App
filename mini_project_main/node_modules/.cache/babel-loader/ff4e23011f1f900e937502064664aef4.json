{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\components\\\\notes\\\\NotesPreview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { FaArrowRight, FaTrash, FaClipboard } from \"react-icons/fa\";\nimport { colorOptions, create, update, remove } from \"../../containers/notes/notesSlice\";\nimport { motion } from \"framer-motion\";\nimport ReactMarkdown from \"react-markdown\";\nimport { AiFillEye } from \"react-icons/ai\";\nimport { RiFileEditFill } from \"react-icons/ri\";\nimport { debounce } from \"./../../helpers\";\nimport ReactTooltip from \"react-tooltip\";\nconst NotesPreviewContainer = styled(motion.div)`\n    display: flex;\n    flex-direction: column;\n    flex: 0 1 0;\n    position: relative;\n    border-left: solid 1px #fabb18;\n    background-color: ${p => p.theme.backgroundSecondary};\n`;\n_c = NotesPreviewContainer;\nconst NoteContentDiv = styled.div`\n    width: 100%;\n    height: 95%;\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n`;\n_c2 = NoteContentDiv;\nconst EditNoteInput = styled.textarea`\n    resize: none;\n    height: 100%;\n    padding: 20px 0 0 25px;\n    font-size: 1em;\n    font-family: monospace;\n    vertical-align: center;\n    border: none;\n    outline: none;\n    background-color: ${p => p.theme.backgroundSecondary};\n    color: ${p => p.theme.primaryText};\n    &::placeholder {\n        color: #c1c1d7;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n_c3 = EditNoteInput;\nconst MarkdownWrapper = styled.div`\n    padding: 20px 0 0 25px;\n    color: ${p => p.theme.primaryText};\n`;\n_c4 = MarkdownWrapper;\nconst NoteActionMenu = styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #fabb18;\n`;\n_c5 = NoteActionMenu;\nconst MenuActionButtonGroup = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\n_c6 = MenuActionButtonGroup;\nconst MenuActionButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    cursor: pointer;\n    svg {\n        padding: 1px 10px;\n        color: ${p => p.theme.primaryText};\n        font-size: 1em;\n    }\n    &:hover {\n        background-color: ${p => p.theme.backgroundSecondary};\n    }\n`;\n_c7 = MenuActionButton;\nconst NoteColorSelectionBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 8px;\n    height: 100%;\n    width: 180px;\n    margin: 4px;\n`;\n_c8 = NoteColorSelectionBox;\nconst ColorOption = styled.div`\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    cursor: pointer;\n    background-color: ${p => p.color};\n    background-clip: content-box;\n    padding: 2px;\n    margin: 0 3px;\n    border: ${p => p.isSelected ? \"3px solid black\" : \"\"};\n`;\n_c9 = ColorOption;\nconst debouncedUpdateNoteContent = debounce((dispatch, id, updatedNoteContent) => {\n  dispatch(update({\n    id: id,\n    noteContent: updatedNoteContent.trim()\n  }));\n}, 1000);\nexport default function NotesPreview({\n  note,\n  setNoteInPreview\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [editNote, setEditNote] = useState();\n  const [noteContent, setNoteContent] = useState();\n  const [noteColor, setNoteColor] = useState();\n  useEffect(() => {\n    if (note !== null) {\n      setNoteContent(note.content);\n      setNoteColor(note.color);\n      setEditNote(true);\n    }\n  }, [note]);\n\n  const handleContentChange = updatedNoteContent => {\n    setNoteContent(updatedNoteContent);\n    debouncedUpdateNoteContent(dispatch, note.id, updatedNoteContent);\n  };\n\n  const handleColorUpdate = (note, noteColor) => {\n    let updatePayload = {\n      id: note.id,\n      noteColor\n    };\n    dispatch(update(updatePayload));\n    setNoteColor(noteColor);\n  };\n\n  const handleDeleteNoteAction = id => {\n    dispatch(remove(id));\n    setNoteInPreview(null);\n  };\n\n  const handleCloseAction = () => {\n    dispatch(remove(null)); // clears all empty body notes\n\n    setNoteInPreview(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(NotesPreviewContainer, {\n      initial: {\n        flex: note === null ? \"0 1 0\" : \"2 1 0\"\n      },\n      animate: {\n        flex: note === null ? \"0 1 0\" : \"2 1 0\"\n      },\n      children: note !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NoteActionMenu, {\n          children: [/*#__PURE__*/_jsxDEV(MenuActionButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(MenuActionButton, {\n              onClick: () => handleCloseAction(),\n              children: [/*#__PURE__*/_jsxDEV(FaArrowRight, {\n                \"data-for\": \"closeAction\",\n                \"data-tip\": \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n                id: \"closeAction\",\n                getContent: () => \"Close Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(MenuActionButton, {\n              \"data-for\": \"viewOrEditAction\",\n              \"data-tip\": \"\",\n              onClick: () => setEditNote(!editNote),\n              children: [editNote ? /*#__PURE__*/_jsxDEV(AiFillEye, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(RiFileEditFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 65\n              }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n                id: \"viewOrEditAction\",\n                getContent: () => editNote ? \"View Markdown\" : \"Edit Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(MenuActionButton, {\n              onClick: () => navigator.clipboard.writeText(noteContent),\n              children: [/*#__PURE__*/_jsxDEV(FaClipboard, {\n                \"data-for\": \"copyAction\",\n                \"data-tip\": \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n                id: \"copyAction\",\n                getContent: () => \"Copy Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(MenuActionButton, {\n              onClick: () => handleDeleteNoteAction(note.id),\n              children: [/*#__PURE__*/_jsxDEV(FaTrash, {\n                \"data-for\": \"deleteAction\",\n                \"data-tip\": \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n                id: \"deleteAction\",\n                getContent: () => \"Delete Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(NoteColorSelectionBox, {\n            children: Object.keys(colorOptions).map((color, idx) => /*#__PURE__*/_jsxDEV(ColorOption, {\n              onClick: () => handleColorUpdate(note, colorOptions[color]),\n              isSelected: noteColor === colorOptions[color],\n              color: colorOptions[color]\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NoteContentDiv, {\n          children: editNote ? /*#__PURE__*/_jsxDEV(EditNoteInput, {\n            placeholder: \"Type note here..\",\n            autoFocus: true,\n            type: \"text\",\n            value: noteContent,\n            onChange: e => handleContentChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(MarkdownWrapper, {\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: noteContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NotesPreview, \"Z6G3BgIvtKeXlM68+IxrkfKpZPI=\", false, function () {\n  return [useDispatch];\n});\n\n_c10 = NotesPreview;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"NotesPreviewContainer\");\n$RefreshReg$(_c2, \"NoteContentDiv\");\n$RefreshReg$(_c3, \"EditNoteInput\");\n$RefreshReg$(_c4, \"MarkdownWrapper\");\n$RefreshReg$(_c5, \"NoteActionMenu\");\n$RefreshReg$(_c6, \"MenuActionButtonGroup\");\n$RefreshReg$(_c7, \"MenuActionButton\");\n$RefreshReg$(_c8, \"NoteColorSelectionBox\");\n$RefreshReg$(_c9, \"ColorOption\");\n$RefreshReg$(_c10, \"NotesPreview\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/components/notes/NotesPreview.js"],"names":["React","useEffect","useState","useDispatch","useSelector","styled","AnimatePresence","FaArrowRight","FaTrash","FaClipboard","colorOptions","create","update","remove","motion","ReactMarkdown","AiFillEye","RiFileEditFill","debounce","ReactTooltip","NotesPreviewContainer","div","p","theme","backgroundSecondary","NoteContentDiv","EditNoteInput","textarea","primaryText","MarkdownWrapper","NoteActionMenu","MenuActionButtonGroup","MenuActionButton","NoteColorSelectionBox","ColorOption","color","isSelected","debouncedUpdateNoteContent","dispatch","id","updatedNoteContent","noteContent","trim","NotesPreview","note","setNoteInPreview","editNote","setEditNote","setNoteContent","noteColor","setNoteColor","content","handleContentChange","handleColorUpdate","updatePayload","handleDeleteNoteAction","handleCloseAction","flex","navigator","clipboard","writeText","Object","keys","map","idx","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { FaArrowRight, FaTrash, FaClipboard } from \"react-icons/fa\";\nimport { colorOptions, create, update, remove } from \"../../containers/notes/notesSlice\";\nimport { motion } from \"framer-motion\";\nimport ReactMarkdown from \"react-markdown\";\nimport { AiFillEye } from \"react-icons/ai\";\nimport { RiFileEditFill } from \"react-icons/ri\";\nimport { debounce } from \"./../../helpers\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst NotesPreviewContainer = styled(motion.div)`\n    display: flex;\n    flex-direction: column;\n    flex: 0 1 0;\n    position: relative;\n    border-left: solid 1px #fabb18;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n`;\n\nconst NoteContentDiv = styled.div`\n    width: 100%;\n    height: 95%;\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n`;\n\nconst EditNoteInput = styled.textarea`\n    resize: none;\n    height: 100%;\n    padding: 20px 0 0 25px;\n    font-size: 1em;\n    font-family: monospace;\n    vertical-align: center;\n    border: none;\n    outline: none;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    &::placeholder {\n        color: #c1c1d7;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst MarkdownWrapper = styled.div`\n    padding: 20px 0 0 25px;\n    color: ${(p) => p.theme.primaryText};\n`;\n\nconst NoteActionMenu = styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #fabb18;\n`;\n\nconst MenuActionButtonGroup = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\n\nconst MenuActionButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    cursor: pointer;\n    svg {\n        padding: 1px 10px;\n        color: ${(p) => p.theme.primaryText};\n        font-size: 1em;\n    }\n    &:hover {\n        background-color: ${(p) => p.theme.backgroundSecondary};\n    }\n`;\n\nconst NoteColorSelectionBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 8px;\n    height: 100%;\n    width: 180px;\n    margin: 4px;\n`;\n\nconst ColorOption = styled.div`\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    cursor: pointer;\n    background-color: ${(p) => p.color};\n    background-clip: content-box;\n    padding: 2px;\n    margin: 0 3px;\n    border: ${(p) => (p.isSelected ? \"3px solid black\" : \"\")};\n`;\n\nconst debouncedUpdateNoteContent = debounce((dispatch, id, updatedNoteContent) => {\n    dispatch(update({ id: id, noteContent: updatedNoteContent.trim() }));\n}, 1000);\n\nexport default function NotesPreview({ note, setNoteInPreview }) {\n    const dispatch = useDispatch();\n    const [editNote, setEditNote] = useState();\n    const [noteContent, setNoteContent] = useState();\n    const [noteColor, setNoteColor] = useState();\n\n    useEffect(() => {\n        if (note !== null) {\n            setNoteContent(note.content);\n            setNoteColor(note.color);\n            setEditNote(true);\n        }\n    }, [note]);\n\n    const handleContentChange = (updatedNoteContent) => {\n        setNoteContent(updatedNoteContent);\n        debouncedUpdateNoteContent(dispatch, note.id, updatedNoteContent);\n    };\n\n    const handleColorUpdate = (note, noteColor) => {\n        let updatePayload = {\n            id: note.id,\n            noteColor,\n        };\n        dispatch(update(updatePayload));\n        setNoteColor(noteColor);\n    };\n\n    const handleDeleteNoteAction = (id) => {\n        dispatch(remove(id));\n        setNoteInPreview(null);\n    };\n\n    const handleCloseAction = () => {\n        dispatch(remove(null)); // clears all empty body notes\n        setNoteInPreview(null);\n    };\n\n    return (\n        <AnimatePresence>\n            <NotesPreviewContainer\n                initial={{\n                    flex: note === null ? \"0 1 0\" : \"2 1 0\",\n                }}\n                animate={{\n                    flex: note === null ? \"0 1 0\" : \"2 1 0\",\n                }}\n            >\n                {note !== null && (\n                    <>\n                        <NoteActionMenu>\n                            <MenuActionButtonGroup>\n                                <MenuActionButton onClick={() => handleCloseAction()}>\n                                    <FaArrowRight data-for=\"closeAction\" data-tip=\"\" />\n                                    <ReactTooltip id=\"closeAction\" getContent={() => \"Close Note\"} />\n                                </MenuActionButton>\n                                <MenuActionButton data-for=\"viewOrEditAction\" data-tip=\"\" onClick={() => setEditNote(!editNote)}>\n                                    {editNote ? <AiFillEye /> : <RiFileEditFill />}\n                                    <ReactTooltip id=\"viewOrEditAction\" getContent={() => (editNote ? \"View Markdown\" : \"Edit Note\")} />\n                                </MenuActionButton>\n                                <MenuActionButton onClick={() => navigator.clipboard.writeText(noteContent)}>\n                                    <FaClipboard data-for=\"copyAction\" data-tip=\"\" />\n                                    <ReactTooltip id=\"copyAction\" getContent={() => \"Copy Note\"} />\n                                </MenuActionButton>\n\n                                <MenuActionButton onClick={() => handleDeleteNoteAction(note.id)}>\n                                    <FaTrash data-for=\"deleteAction\" data-tip=\"\" />\n                                    <ReactTooltip id=\"deleteAction\" getContent={() => \"Delete Note\"} />\n                                </MenuActionButton>\n                            </MenuActionButtonGroup>\n                            <NoteColorSelectionBox>\n                                {Object.keys(colorOptions).map((color, idx) => (\n                                    <ColorOption\n                                        key={idx}\n                                        onClick={() => handleColorUpdate(note, colorOptions[color])}\n                                        isSelected={noteColor === colorOptions[color]}\n                                        color={colorOptions[color]}\n                                    />\n                                ))}\n                            </NoteColorSelectionBox>\n                        </NoteActionMenu>\n                        <NoteContentDiv>\n                            {editNote ? (\n                                <EditNoteInput\n                                    placeholder=\"Type note here..\"\n                                    autoFocus\n                                    type=\"text\"\n                                    value={noteContent}\n                                    onChange={(e) => handleContentChange(e.target.value)}\n                                />\n                            ) : (\n                                <MarkdownWrapper>\n                                    <ReactMarkdown children={noteContent} />\n                                </MarkdownWrapper>\n                            )}\n                        </NoteContentDiv>\n                    </>\n                )}\n            </NotesPreviewContainer>\n        </AnimatePresence>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}