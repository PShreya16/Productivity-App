{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\containers\\\\settings\\\\AutoMarkDone.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Switch from \"react-switch\";\nimport { toggleAutoCompleteZeroTimeTask } from \"./settingsSlice\";\nimport { InputDiv } from \"./index\";\nconst AutoMarkDoneDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 80%;\n    height: 70px;\n    background-color: ${p => p.theme.backgroundSecondary};\n    p {\n        margin: 0;\n    }\n`;\n_c = AutoMarkDoneDiv;\nexport function AutoMarkDone() {\n  _s();\n\n  const autoCompleteZeroTimeTask = useSelector(s => s.settings.autoCompleteZeroTimeTask);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(AutoMarkDoneDiv, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Mark task as done automatically when timer runs out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputDiv, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: autoCompleteZeroTimeTask,\n        offColor: \"#c1c1d7\",\n        onColor: \"#77dd77\",\n        onChange: () => dispatch(toggleAutoCompleteZeroTimeTask())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AutoMarkDone, \"j88WIv1u7vjndSRhtpw2MjwfDkc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c2 = AutoMarkDone;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AutoMarkDoneDiv\");\n$RefreshReg$(_c2, \"AutoMarkDone\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/containers/settings/AutoMarkDone.js"],"names":["React","useSelector","useDispatch","styled","Switch","toggleAutoCompleteZeroTimeTask","InputDiv","AutoMarkDoneDiv","div","p","theme","backgroundSecondary","AutoMarkDone","autoCompleteZeroTimeTask","s","settings","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,8BAAT,QAA+C,iBAA/C;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,MAAMC,eAAe,GAAGJ,MAAM,CAACK,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA,wBAAyBC,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQC,mBAAoB;AAC3D;AACA;AACA;AACA,CAVA;KAAMJ,e;AAYN,OAAO,SAASK,YAAT,GAAwB;AAAA;;AAC3B,QAAMC,wBAAwB,GAAGZ,WAAW,CAAEa,CAAD,IAAOA,CAAC,CAACC,QAAF,CAAWF,wBAAnB,CAA5C;AACA,QAAMG,QAAQ,GAAGd,WAAW,EAA5B;AAEA,sBACI,QAAC,eAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEW,wBAAjB;AAA2C,QAAA,QAAQ,EAAC,SAApD;AAA8D,QAAA,OAAO,EAAC,SAAtE;AAAgF,QAAA,QAAQ,EAAE,MAAMG,QAAQ,CAACX,8BAA8B,EAA/B;AAAxG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAZeO,Y;UACqBX,W,EAChBC,W;;;MAFLU,Y","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Switch from \"react-switch\";\nimport { toggleAutoCompleteZeroTimeTask } from \"./settingsSlice\";\nimport { InputDiv } from \"./index\";\n\nconst AutoMarkDoneDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 80%;\n    height: 70px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    p {\n        margin: 0;\n    }\n`;\n\nexport function AutoMarkDone() {\n    const autoCompleteZeroTimeTask = useSelector((s) => s.settings.autoCompleteZeroTimeTask);\n    const dispatch = useDispatch();\n\n    return (\n        <AutoMarkDoneDiv>\n            <p>Mark task as done automatically when timer runs out</p>\n            <InputDiv>\n                <Switch checked={autoCompleteZeroTimeTask} offColor=\"#c1c1d7\" onColor=\"#77dd77\" onChange={() => dispatch(toggleAutoCompleteZeroTimeTask())} />\n            </InputDiv>\n        </AutoMarkDoneDiv>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}