{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\containers\\\\focusBoard\\\\FocusBoard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { FocussedTask } from \"./../../components/FocusBoard/FocussedTask\";\nimport { EmptyFocusBox } from \"./../../components/FocusBoard/EmptyFocusBox\";\nimport { Soundscapes } from \"./../../components/MusicBox/Soundscapes\";\nconst FocusBoardContainer = styled.div`\n    flex: 1 1 0;\n    min-width: 346px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin:0 0 0 20px;\n    height:100%;\n    /* background-color:silver; */\n`;\n_c = FocusBoardContainer;\nconst FocussedTaskContainer = styled.div`\n    display: flex;\n    align-items:center;\n    justify-content: space-between;\n    flex-direction: column;\n    width: 80%;\n    max-width: 326px;\n    height: 226px;\n    margin: 10px 0;\n    /* background-color: green; */\n`;\n_c2 = FocussedTaskContainer;\nconst MusicBoxContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 80%;\n    max-width: 326px;\n    height: 186px;\n    margin: 10px 0;\n    background-color:${p => p.theme.backgroundSecondary};\n    border-radius: 20px;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`; // this can be improved as right now whole focus board is re-rendered and not just the focus task containter\n\n_c3 = MusicBoxContainer;\nexport function FocusBoard() {\n  _s();\n\n  const focussedTaskIndex = useSelector(state => state.tasks.meta.focussedTaskIndex);\n  const noTasks = useSelector(s => s.tasks.taskArray.length === s.tasks.meta.completedTasksCount ? true : false);\n  const noChoice = useSelector(s => s.tasks.taskArray.length - s.tasks.meta.completedTasksCount <= 1 ? true : false);\n  return /*#__PURE__*/_jsxDEV(FocusBoardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FocussedTaskContainer, {\n      children: focussedTaskIndex !== -1 ? /*#__PURE__*/_jsxDEV(FocussedTask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyFocusBox, {\n        noChoice: noChoice,\n        noTasks: noTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MusicBoxContainer, {\n      children: /*#__PURE__*/_jsxDEV(Soundscapes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FocusBoard, \"XKjGU+WQALFxJ6MO8n7tSwQ4MT8=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c4 = FocusBoard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FocusBoardContainer\");\n$RefreshReg$(_c2, \"FocussedTaskContainer\");\n$RefreshReg$(_c3, \"MusicBoxContainer\");\n$RefreshReg$(_c4, \"FocusBoard\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/containers/focusBoard/FocusBoard.js"],"names":["React","useSelector","useDispatch","styled","FocussedTask","EmptyFocusBox","Soundscapes","FocusBoardContainer","div","FocussedTaskContainer","MusicBoxContainer","p","theme","backgroundSecondary","FocusBoard","focussedTaskIndex","state","tasks","meta","noTasks","s","taskArray","length","completedTasksCount","noChoice"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,4CAAP;AACA,SAASC,YAAT,QAA6B,4CAA7B;AACA,SAASC,aAAT,QAA8B,6CAA9B;AACA,SAASC,WAAT,QAA4B,yCAA5B;AAEA,MAAMC,mBAAmB,GAAGJ,MAAM,CAACK,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,mB;AAWN,MAAME,qBAAqB,GAAGN,MAAM,CAACK,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,qB;AAYN,MAAMC,iBAAiB,GAAGP,MAAM,CAACK,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuBG,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQC,mBAAoB;AACtD;AACA;AACA;AACA,CAXA,C,CAaA;;MAbMH,iB;AAeN,OAAO,SAASI,UAAT,GAAsB;AAAA;;AACzB,QAAMC,iBAAiB,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBH,iBAA7B,CAArC;AACA,QAAMI,OAAO,GAAGlB,WAAW,CAAEmB,CAAD,IAAOA,CAAC,CAACH,KAAF,CAAQI,SAAR,CAAkBC,MAAlB,KAA2BF,CAAC,CAACH,KAAF,CAAQC,IAAR,CAAaK,mBAAxC,GAA4D,IAA5D,GAAiE,KAAzE,CAA3B;AACA,QAAMC,QAAQ,GAAGvB,WAAW,CAAEmB,CAAD,IAAOA,CAAC,CAACH,KAAF,CAAQI,SAAR,CAAkBC,MAAlB,GAAyBF,CAAC,CAACH,KAAF,CAAQC,IAAR,CAAaK,mBAAtC,IAA2D,CAA3D,GAA6D,IAA7D,GAAkE,KAA1E,CAA5B;AACA,sBACI,QAAC,mBAAD;AAAA,4BACI,QAAC,qBAAD;AAAA,gBACKR,iBAAiB,KAAK,CAAC,CAAvB,gBAA2B,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAA3B,gBAA8C,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAES,QAAzB;AAAmC,QAAA,OAAO,EAAEL;AAA5C;AAAA;AAAA;AAAA;AAAA;AADnD;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,iBAAD;AAAA,6BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAdeL,U;UACcb,W,EACVA,W,EACCA,W;;;MAHLa,U","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { FocussedTask } from \"./../../components/FocusBoard/FocussedTask\";\nimport { EmptyFocusBox } from \"./../../components/FocusBoard/EmptyFocusBox\";\nimport { Soundscapes } from \"./../../components/MusicBox/Soundscapes\";\n\nconst FocusBoardContainer = styled.div`\n    flex: 1 1 0;\n    min-width: 346px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin:0 0 0 20px;\n    height:100%;\n    /* background-color:silver; */\n`;\n\nconst FocussedTaskContainer = styled.div`\n    display: flex;\n    align-items:center;\n    justify-content: space-between;\n    flex-direction: column;\n    width: 80%;\n    max-width: 326px;\n    height: 226px;\n    margin: 10px 0;\n    /* background-color: green; */\n`;\n\nconst MusicBoxContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 80%;\n    max-width: 326px;\n    height: 186px;\n    margin: 10px 0;\n    background-color:${p=>p.theme.backgroundSecondary};\n    border-radius: 20px;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`;\n\n// this can be improved as right now whole focus board is re-rendered and not just the focus task containter\n\nexport function FocusBoard() {\n    const focussedTaskIndex = useSelector((state) => state.tasks.meta.focussedTaskIndex);\n    const noTasks = useSelector((s) => s.tasks.taskArray.length===s.tasks.meta.completedTasksCount?true:false);\n    const noChoice = useSelector((s) => s.tasks.taskArray.length-s.tasks.meta.completedTasksCount<=1?true:false);\n    return (\n        <FocusBoardContainer>\n            <FocussedTaskContainer>\n                {focussedTaskIndex !== -1 ? <FocussedTask /> : <EmptyFocusBox noChoice={noChoice} noTasks={noTasks}/>}\n            </FocussedTaskContainer>\n            <MusicBoxContainer>\n                <Soundscapes />\n            </MusicBoxContainer>\n        </FocusBoardContainer>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}