{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\components\\\\MiscBoard\\\\TaskProgressCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { SummaryCardTick } from \"./../customIcons\";\nconst ProgressCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    position: relative;\n    width: 95%;\n    height: 45%;\n    border-radius: 10px;\n    border-left: 5px solid #77dd77;\n    color: ${p => p.theme.primaryText};\n    background-color: ${p => p.theme.type === \"l\" ? \"#f0fff0\" : \"#003500\"};\n`;\n_c = ProgressCard;\nconst ProgressCardText = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 90%;\n    height: 45%;\n    /* background-color: #d1effa; */\n    font-weight: bold;\n    p {\n        font-size: 1.2em;\n        margin: 0;\n    }\n    span {\n        font-size: 0.7em;\n        opacity:0.6;\n    }\n`;\n_c2 = ProgressCardText;\nconst absoluteIconStyles = css`\n    position: absolute;\n    top: 5px;\n    right: 5px;\n`;\nconst TickIconDiv = styled.div`\n    width: ${p => p.noTasks ? \"45%\" : \"20px\"};\n    ${p => p.noTasks ? \"\" : absoluteIconStyles}\n    svg {\n        color: #77dd77;\n        opacity: ${p => p.noTasks ? \"0.7\" : 1};\n    }\n`;\n_c3 = TickIconDiv;\nexport function TaskProgressCard() {\n  _s();\n\n  const completedTasksCount = useSelector(s => s.tasks.meta.completedTasksCount);\n  const totalTasksCount = useSelector(s => s.tasks.taskArray.length);\n  return /*#__PURE__*/_jsxDEV(ProgressCard, {\n    children: [totalTasksCount !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressCardText, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: completedTasksCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"done tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProgressCardText, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: totalTasksCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"total tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(TickIconDiv, {\n      noTasks: totalTasksCount === 0,\n      children: /*#__PURE__*/_jsxDEV(SummaryCardTick, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskProgressCard, \"+nPV6HQRsiHTn6jjTLYBk+OJIyU=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c4 = TaskProgressCard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ProgressCard\");\n$RefreshReg$(_c2, \"ProgressCardText\");\n$RefreshReg$(_c3, \"TickIconDiv\");\n$RefreshReg$(_c4, \"TaskProgressCard\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/components/MiscBoard/TaskProgressCard.js"],"names":["React","styled","css","useSelector","SummaryCardTick","ProgressCard","div","p","theme","primaryText","type","ProgressCardText","absoluteIconStyles","TickIconDiv","noTasks","TaskProgressCard","completedTasksCount","s","tasks","meta","totalTasksCount","taskArray","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,MAAMC,YAAY,GAAGJ,MAAM,CAACK,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcC,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQC,WAAY;AACxC,wBAAyBF,CAAD,IAAQA,CAAC,CAACC,KAAF,CAAQE,IAAR,KAAiB,GAAjB,GAAuB,SAAvB,GAAmC,SAAW;AAC9E,CAZA;KAAML,Y;AAcN,MAAMM,gBAAgB,GAAGV,MAAM,CAACK,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMK,gB;AAkBN,MAAMC,kBAAkB,GAAGV,GAAI;AAC/B;AACA;AACA;AACA,CAJA;AAMA,MAAMW,WAAW,GAAGZ,MAAM,CAACK,GAAI;AAC/B,aAAcC,CAAD,IAAQA,CAAC,CAACO,OAAF,GAAY,KAAZ,GAAoB,MAAQ;AACjD,MAAOP,CAAD,IAAQA,CAAC,CAACO,OAAF,GAAY,EAAZ,GAAiBF,kBAAoB;AACnD;AACA;AACA,mBAAoBL,CAAD,IAAQA,CAAC,CAACO,OAAF,GAAY,KAAZ,GAAoB,CAAG;AAClD;AACA,CAPA;MAAMD,W;AASN,OAAO,SAASE,gBAAT,GAA4B;AAAA;;AAC/B,QAAMC,mBAAmB,GAAGb,WAAW,CAAEc,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQC,IAAR,CAAaH,mBAArB,CAAvC;AACA,QAAMI,eAAe,GAAGjB,WAAW,CAAEc,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQG,SAAR,CAAkBC,MAA1B,CAAnC;AAEA,sBACI,QAAC,YAAD;AAAA,eACKF,eAAe,KAAK,CAApB,iBACG;AAAA,8BACI,QAAC,gBAAD;AAAA,gCACI;AAAA,oBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,gBAAD;AAAA,gCACI;AAAA,oBAAII;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,oBAFR,eAcI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEA,eAAe,KAAK,CAA1C;AAAA,6BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAxBeL,gB;UACgBZ,W,EACJA,W;;;MAFZY,gB","sourcesContent":["import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { SummaryCardTick } from \"./../customIcons\";\n\nconst ProgressCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    position: relative;\n    width: 95%;\n    height: 45%;\n    border-radius: 10px;\n    border-left: 5px solid #77dd77;\n    color: ${(p) => p.theme.primaryText};\n    background-color: ${(p) => (p.theme.type === \"l\" ? \"#f0fff0\" : \"#003500\")};\n`;\n\nconst ProgressCardText = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 90%;\n    height: 45%;\n    /* background-color: #d1effa; */\n    font-weight: bold;\n    p {\n        font-size: 1.2em;\n        margin: 0;\n    }\n    span {\n        font-size: 0.7em;\n        opacity:0.6;\n    }\n`;\n\nconst absoluteIconStyles = css`\n    position: absolute;\n    top: 5px;\n    right: 5px;\n`;\n\nconst TickIconDiv = styled.div`\n    width: ${(p) => (p.noTasks ? \"45%\" : \"20px\")};\n    ${(p) => (p.noTasks ? \"\" : absoluteIconStyles)}\n    svg {\n        color: #77dd77;\n        opacity: ${(p) => (p.noTasks ? \"0.7\" : 1)};\n    }\n`;\n\nexport function TaskProgressCard() {\n    const completedTasksCount = useSelector((s) => s.tasks.meta.completedTasksCount);\n    const totalTasksCount = useSelector((s) => s.tasks.taskArray.length);\n\n    return (\n        <ProgressCard>\n            {totalTasksCount !== 0 && (\n                <>\n                    <ProgressCardText>\n                        <p>{completedTasksCount}</p>\n                        <span>done tasks</span>\n                    </ProgressCardText>\n                    <ProgressCardText>\n                        <p>{totalTasksCount}</p>\n                        <span>total tasks</span>\n                    </ProgressCardText>\n                </>\n            )}\n\n            <TickIconDiv noTasks={totalTasksCount === 0}>\n                <SummaryCardTick />\n            </TickIconDiv>\n        </ProgressCard>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}