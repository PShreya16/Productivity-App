{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\components\\\\MiscBoard\\\\ProgressRings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { buildStyles, CircularProgressbarWithChildren, CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport styled from \"styled-components\";\nconst ProgressRingBox = styled.div`\n    display: flex;\n    flex-direction:column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n`;\n_c = ProgressRingBox;\nconst ProgressRingDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 90%;\n    height: 55%;\n    /* background-color:#afa1d1; */\n`;\n_c2 = ProgressRingDiv;\nconst ProgressRingLegendDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 80%;\n    height: 30%;\n    /* background-color: cyan; */\n    color: #FABB18;\n    font-weight: bold;\n    p {\n        margin: 3px 0;\n        font-size: 0.9em;\n        letter-spacing: 2;\n    }\n`;\n_c3 = ProgressRingLegendDiv;\nconst LegendDataDiv = styled.div`\n    display: flex;\n    align-items: center;\n    width: 95%;\n    /* background-color: #fdadef; */\n    margin: 4px 0;\n    color:${p => p.theme.primaryText};\n`;\n_c4 = LegendDataDiv;\nconst TextDiv = styled.div`\n    font-weight: bold;\n    font-size: 0.8em;\n    p {\n        margin: 0 3px;\n    }\n`;\n_c5 = TextDiv;\nconst PercentTextDiv = styled.div`\n    font-weight: bold;\n    font-size: 0.7em;\n    margin-left: auto;\n    color:${p => p.theme.primaryText};\n`;\n_c6 = PercentTextDiv;\nconst LegendColorDot = styled.div`\n    width: 10px;\n    height: 10px;\n    background-color: ${p => p.color};\n    border-radius: 50%;\n`;\n_c7 = LegendColorDot;\nexport function ProgressRings() {\n  _s();\n\n  const completedTasksCount = useSelector(s => s.tasks.meta.completedTasksCount);\n  const totalTasksCount = useSelector(s => s.tasks.taskArray.length);\n  let taskCompletionPercent = totalTasksCount !== 0 ? Math.floor(completedTasksCount / totalTasksCount * 100) : 100;\n  const remainingTaskListTime = useSelector(s => s.tasks.meta.remainingTaskListTime);\n  const totalTaskListTime = useSelector(s => s.tasks.meta.totalTaskListTime);\n  let timeCompletionPercent = totalTaskListTime !== 0 ? Math.floor((totalTaskListTime - remainingTaskListTime) / totalTaskListTime * 100) : 100;\n  return /*#__PURE__*/_jsxDEV(ProgressRingBox, {\n    children: [/*#__PURE__*/_jsxDEV(ProgressRingDiv, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 115,\n          height: 115\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgressbarWithChildren, {\n          value: taskCompletionPercent,\n          styles: buildStyles({\n            pathColor: \"#77dd77\",\n            trailColor: \"#FFE39E\"\n          }),\n          strokeWidth: 11,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 75,\n              height: 75\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n              value: timeCompletionPercent,\n              styles: buildStyles({\n                pathColor: \"#0000cd\",\n                trailColor: \"#FFE39E\"\n              }),\n              strokeWidth: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressRingLegendDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LegendDataDiv, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColorDot, {\n          color: \"#77dd77\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextDiv, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PercentTextDiv, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: totalTasksCount === 0 ? \"--\" : `${taskCompletionPercent}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LegendDataDiv, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColorDot, {\n          color: \"#0000cd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextDiv, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PercentTextDiv, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: totalTasksCount === 0 ? \"--\" : `${timeCompletionPercent}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProgressRings, \"2sohfzTlH3l4cf/GJeaxKPEAyyU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c8 = ProgressRings;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"ProgressRingBox\");\n$RefreshReg$(_c2, \"ProgressRingDiv\");\n$RefreshReg$(_c3, \"ProgressRingLegendDiv\");\n$RefreshReg$(_c4, \"LegendDataDiv\");\n$RefreshReg$(_c5, \"TextDiv\");\n$RefreshReg$(_c6, \"PercentTextDiv\");\n$RefreshReg$(_c7, \"LegendColorDot\");\n$RefreshReg$(_c8, \"ProgressRings\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/components/MiscBoard/ProgressRings.js"],"names":["React","useSelector","buildStyles","CircularProgressbarWithChildren","CircularProgressbar","styled","ProgressRingBox","div","ProgressRingDiv","ProgressRingLegendDiv","LegendDataDiv","p","theme","primaryText","TextDiv","PercentTextDiv","LegendColorDot","color","ProgressRings","completedTasksCount","s","tasks","meta","totalTasksCount","taskArray","length","taskCompletionPercent","Math","floor","remainingTaskListTime","totalTaskListTime","timeCompletionPercent","width","height","pathColor","trailColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { buildStyles, CircularProgressbarWithChildren, CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport styled from \"styled-components\";\n\nconst ProgressRingBox = styled.div`\n    display: flex;\n    flex-direction:column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n`;\n\nconst ProgressRingDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 90%;\n    height: 55%;\n    /* background-color:#afa1d1; */\n`;\n\nconst ProgressRingLegendDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 80%;\n    height: 30%;\n    /* background-color: cyan; */\n    color: #FABB18;\n    font-weight: bold;\n    p {\n        margin: 3px 0;\n        font-size: 0.9em;\n        letter-spacing: 2;\n    }\n`;\n\nconst LegendDataDiv = styled.div`\n    display: flex;\n    align-items: center;\n    width: 95%;\n    /* background-color: #fdadef; */\n    margin: 4px 0;\n    color:${p=>p.theme.primaryText};\n`;\n\nconst TextDiv = styled.div`\n    font-weight: bold;\n    font-size: 0.8em;\n    p {\n        margin: 0 3px;\n    }\n`;\n\nconst PercentTextDiv = styled.div`\n    font-weight: bold;\n    font-size: 0.7em;\n    margin-left: auto;\n    color:${p=>p.theme.primaryText};\n`;\n\nconst LegendColorDot = styled.div`\n    width: 10px;\n    height: 10px;\n    background-color: ${(p) => p.color};\n    border-radius: 50%;\n`;\n\nexport function ProgressRings() {\n    const completedTasksCount = useSelector((s) => s.tasks.meta.completedTasksCount);\n    const totalTasksCount = useSelector((s) => s.tasks.taskArray.length);\n    let taskCompletionPercent = totalTasksCount !== 0 ? Math.floor((completedTasksCount / totalTasksCount) * 100) : 100;\n\n    const remainingTaskListTime = useSelector((s) => s.tasks.meta.remainingTaskListTime);\n    const totalTaskListTime = useSelector((s) => s.tasks.meta.totalTaskListTime);\n    let timeCompletionPercent = totalTaskListTime !== 0 ? Math.floor(((totalTaskListTime - remainingTaskListTime) / totalTaskListTime) * 100) : 100;\n\n    return (\n        <ProgressRingBox>\n            <ProgressRingDiv>\n                <div style={{ width: 115, height: 115 }}>\n                    <CircularProgressbarWithChildren\n                        value={taskCompletionPercent}\n                        styles={buildStyles({\n                            pathColor: \"#77dd77\",\n                            trailColor: \"#FFE39E\",\n                        })}\n                        strokeWidth={11}\n                    >\n                        <div style={{ width: 75, height: 75 }}>\n                            <CircularProgressbar\n                                value={timeCompletionPercent}\n                                styles={buildStyles({\n                                    pathColor: \"#0000cd\",\n                                    trailColor: \"#FFE39E\",\n                                })}\n                                strokeWidth={16}\n                            />\n                        </div>\n                    </CircularProgressbarWithChildren>\n                </div>\n            </ProgressRingDiv>\n            <ProgressRingLegendDiv>\n                <p>Progress</p>\n                <LegendDataDiv>\n                    <LegendColorDot color=\"#77dd77\" />\n                    <TextDiv>\n                        <p>\n                            tasks\n                        </p>\n                    </TextDiv>\n\n                    <PercentTextDiv>\n                        <span>{totalTasksCount===0? \"--\":`${taskCompletionPercent}%`}</span>\n                    </PercentTextDiv>\n                </LegendDataDiv>\n                <LegendDataDiv>\n                    <LegendColorDot color=\"#0000cd\" />\n                    <TextDiv>\n                        <p>time</p>\n                    </TextDiv>\n                    <PercentTextDiv>\n                    <span>{totalTasksCount===0? \"--\":`${timeCompletionPercent}%`}</span>\n                    </PercentTextDiv>\n                </LegendDataDiv>\n            </ProgressRingLegendDiv>\n        </ProgressRingBox>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}