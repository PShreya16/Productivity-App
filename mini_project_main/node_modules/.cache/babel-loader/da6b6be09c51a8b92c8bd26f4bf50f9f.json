{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\components\\\\MiscBoard\\\\LabelPie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { useSelector } from \"react-redux\";\nimport ReactTooltip from \"react-tooltip\";\nimport { EmptyLabelPie } from \"./EmptyLabelPie\";\nexport function LabelPie() {\n  _s();\n\n  const labels = useSelector(s => s.tasks.labels);\n  const totalTasksCount = useSelector(s => s.tasks.taskArray.length);\n  const [selected, setSelected] = useState(0);\n  const [hovered, setHovered] = useState(undefined);\n  let labelledTasksCount = 0;\n  let labelData = Object.keys(labels).reduce((filtered, i) => {\n    if (labels[i].count > 0) {\n      labelledTasksCount += labels[i].count;\n      filtered.push({\n        tooltip: `#${i} - ${labels[i].count} tasks`,\n        value: labels[i].count,\n        color: labels[i].color\n      });\n    }\n\n    return filtered;\n  }, []);\n\n  if (totalTasksCount - labelledTasksCount > 0) {\n    labelData.push({\n      tooltip: `No Label - ${totalTasksCount - labelledTasksCount} tasks`,\n      value: totalTasksCount - labelledTasksCount,\n      color: \"#4F4F4F\"\n    });\n  }\n\n  labelData = labelData.map((i, idx) => {\n    if (hovered === idx) {\n      i.color = \"#FABB18\";\n      return i;\n    } else return i;\n  });\n  const lineWidth = 60;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 130\n    },\n    \"data-tip\": \"\",\n    \"data-for\": \"LabelPieChart\",\n    children: [labelledTasksCount !== 0 ? /*#__PURE__*/_jsxDEV(PieChart, {\n      style: {\n        fontSize: \"12px\",\n        fontWeight: \"bold\"\n      },\n      data: labelData,\n      radius: PieChart.defaultProps.radius - 6,\n      lineWidth: lineWidth,\n      segmentsStyle: {\n        transition: \"stroke .3s\",\n        cursor: \"pointer\"\n      },\n      segmentsShift: 2,\n      animate: true,\n      label: ({\n        dataEntry\n      }) => dataEntry.value,\n      labelPosition: 100 - lineWidth / 2,\n      labelStyle: {\n        fill: \"#fff\",\n        pointerEvents: \"none\"\n      },\n      onClick: (_, index) => {\n        setSelected(index === selected ? undefined : index);\n      },\n      onMouseOver: (_, index) => {\n        setHovered(index);\n      },\n      onMouseOut: () => {\n        setHovered(undefined);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(EmptyLabelPie, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      id: \"LabelPieChart\",\n      getContent: () => typeof hovered === \"number\" ? labelData[hovered].tooltip : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LabelPie, \"dJOFWblH4cmazNkYS3HotY6mK+I=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = LabelPie;\n\nvar _c;\n\n$RefreshReg$(_c, \"LabelPie\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/components/MiscBoard/LabelPie.js"],"names":["React","useState","PieChart","useSelector","ReactTooltip","EmptyLabelPie","LabelPie","labels","s","tasks","totalTasksCount","taskArray","length","selected","setSelected","hovered","setHovered","undefined","labelledTasksCount","labelData","Object","keys","reduce","filtered","i","count","push","tooltip","value","color","map","idx","lineWidth","width","fontSize","fontWeight","defaultProps","radius","transition","cursor","dataEntry","fill","pointerEvents","_","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { useSelector } from \"react-redux\";\nimport ReactTooltip from \"react-tooltip\";\nimport { EmptyLabelPie } from \"./EmptyLabelPie\";\n\nexport function LabelPie() {\n    const labels = useSelector((s) => s.tasks.labels);\n    const totalTasksCount = useSelector((s) => s.tasks.taskArray.length);\n\n    const [selected, setSelected] = useState(0);\n    const [hovered, setHovered] = useState(undefined);\n\n    let labelledTasksCount = 0;\n\n    let labelData = Object.keys(labels).reduce((filtered, i) => {\n        if (labels[i].count > 0) {\n            labelledTasksCount += labels[i].count;\n            filtered.push({\n                tooltip: `#${i} - ${labels[i].count} tasks`,\n                value: labels[i].count,\n                color: labels[i].color,\n            });\n        }\n        return filtered;\n    }, []);\n\n    if (totalTasksCount - labelledTasksCount > 0) {\n        labelData.push({\n            tooltip: `No Label - ${totalTasksCount - labelledTasksCount} tasks`,\n            value: totalTasksCount - labelledTasksCount,\n            color: \"#4F4F4F\",\n        });\n    }\n\n    labelData = labelData.map((i, idx) => {\n        if (hovered === idx) {\n            i.color = \"#FABB18\";\n            return i;\n        } else return i;\n    });\n\n    const lineWidth = 60;\n\n    return (\n        <div style={{ width: 130 }} data-tip=\"\" data-for=\"LabelPieChart\">\n            {labelledTasksCount !== 0 ? (\n                <PieChart\n                    style={{\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                    }}\n                    data={labelData}\n                    radius={PieChart.defaultProps.radius - 6}\n                    lineWidth={lineWidth}\n                    segmentsStyle={{ transition: \"stroke .3s\", cursor: \"pointer\" }}\n                    segmentsShift={2}\n                    animate\n                    label={({ dataEntry }) => dataEntry.value}\n                    labelPosition={100 - lineWidth / 2}\n                    labelStyle={{\n                        fill: \"#fff\",\n                        pointerEvents: \"none\",\n                    }}\n                    onClick={(_, index) => {\n                        setSelected(index === selected ? undefined : index);\n                    }}\n                    onMouseOver={(_, index) => {\n                        setHovered(index);\n                    }}\n                    onMouseOut={() => {\n                        setHovered(undefined);\n                    }}\n                />\n            ) : (\n                <EmptyLabelPie />\n            )}\n            <ReactTooltip id=\"LabelPieChart\" getContent={() => (typeof hovered === \"number\" ? labelData[hovered].tooltip : null)} />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}