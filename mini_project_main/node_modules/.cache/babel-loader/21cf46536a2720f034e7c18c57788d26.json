{"ast":null,"code":"export function formattedTimeString(x) {\n  x = Math.floor(x / 1000);\n  let secs = x % 60;\n  let mins = Math.floor(x / 60);\n\n  if (secs == 0) {\n    secs = `00`;\n  } else if (secs < 10) {\n    secs = `0${secs}`;\n  }\n\n  if (mins == 0) {\n    mins = `00`;\n  } else if (mins < 10) {\n    mins = `0${mins}`;\n  }\n\n  return `${mins}:${secs}`;\n}\nexport function formattedTimeStringv2(x) {\n  x = Math.floor(x / 1000);\n  let secs = x % 60;\n  let mins = Math.floor(x / 60);\n\n  if (secs == 0) {\n    secs = `00`;\n  } else if (secs < 10) {\n    secs = `0${secs}`;\n  }\n\n  if (mins == 0) {\n    mins = `00`;\n  } else if (mins < 10) {\n    mins = `0${mins}`;\n  }\n\n  return {\n    mins,\n    secs\n  };\n}\nexport function getFormattedDate() {\n  let d = new Date();\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  return {\n    day: days[d.getDay()],\n    month: months[d.getMonth()],\n    date: d.getDate(),\n    year: d.getFullYear()\n  };\n}\nexport function getFormattedListTimeSummary(x) {\n  x = Math.floor(x / 1000);\n  let mins = Math.floor(x % 3600 / 60);\n  let hours = Math.floor(x / 3600);\n\n  if (mins == 0) {\n    mins = `00`;\n  } else if (mins < 10) {\n    mins = `0${mins}`;\n  }\n\n  if (hours == 0) {\n    hours = `0`;\n  } else if (hours < 10) {\n    hours = `${hours}`;\n  }\n\n  return {\n    hours,\n    mins\n  };\n}\nexport function debounce(fn, wait) {\n  let t;\n  return function () {\n    clearTimeout(t);\n    t = setTimeout(() => fn.apply(this, arguments), wait);\n  };\n}\nexport function updatePageTitle(title) {\n  document.title = title;\n}\nexport function getOrdinalSuffix(i) {\n  let j = i % 10,\n      k = i % 100;\n\n  if (j == 1 && k != 11) {\n    return \"st\";\n  }\n\n  if (j == 2 && k != 12) {\n    return \"nd\";\n  }\n\n  if (j == 3 && k != 13) {\n    return \"rd\";\n  }\n\n  return \"th\";\n}\nconst MILLI_IN_30_DAYS = 2592000000;\nconst MILLI_IN_A_DAY = 86400000;\nconst MILLI_IN_A_HOUR = 3600000;\nconst MILLI_IN_A_MIN = 60000;\nexport function getTimeDifferenceForNotes(d1, d2) {\n  let difference = d2 - d1;\n\n  if (difference < MILLI_IN_A_HOUR) {\n    let minsGap = Math.floor(difference / MILLI_IN_A_MIN);\n    return minsGap === 0 ? `recently` : `${minsGap}mins ago`;\n  } else if (difference < MILLI_IN_A_DAY) {\n    let hoursGap = Math.floor(difference / MILLI_IN_A_HOUR);\n    if (hoursGap <= 1) return `${hoursGap}hr ago`;else return `${hoursGap}hrs ago`;\n  } else if (difference < MILLI_IN_30_DAYS) {\n    let daysGap = Math.floor(difference / MILLI_IN_A_DAY);\n    if (daysGap <= 1) return `${daysGap}day ago`;else return `${daysGap}days ago`;\n  } else {\n    return `30+days ago`;\n  }\n}","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/helpers/index.js"],"names":["formattedTimeString","x","Math","floor","secs","mins","formattedTimeStringv2","getFormattedDate","d","Date","months","days","day","getDay","month","getMonth","date","getDate","year","getFullYear","getFormattedListTimeSummary","hours","debounce","fn","wait","t","clearTimeout","setTimeout","apply","arguments","updatePageTitle","title","document","getOrdinalSuffix","i","j","k","MILLI_IN_30_DAYS","MILLI_IN_A_DAY","MILLI_IN_A_HOUR","MILLI_IN_A_MIN","getTimeDifferenceForNotes","d1","d2","difference","minsGap","hoursGap","daysGap"],"mappings":"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","sourcesContent":["export function formattedTimeString(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return `${mins}:${secs}`;\n}\n\nexport function formattedTimeStringv2(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return { mins, secs };\n}\n\nexport function getFormattedDate() {\n    let d = new Date();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return {\n        day: days[d.getDay()],\n        month: months[d.getMonth()],\n        date: d.getDate(),\n        year: d.getFullYear(),\n    };\n}\n\nexport function getFormattedListTimeSummary(x) {\n    x = Math.floor(x / 1000);\n    let mins = Math.floor((x % 3600) / 60);\n    let hours = Math.floor(x / 3600);\n\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n    if (hours == 0) {\n        hours = `0`;\n    } else if (hours < 10) {\n        hours = `${hours}`;\n    }\n\n    return { hours, mins };\n}\n\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\n\nexport function updatePageTitle(title) {\n    document.title = title;\n}\n\nexport function getOrdinalSuffix(i) {\n    let j = i % 10,\n        k = i % 100;\n    if (j == 1 && k != 11) {\n        return \"st\";\n    }\n    if (j == 2 && k != 12) {\n        return \"nd\";\n    }\n    if (j == 3 && k != 13) {\n        return \"rd\";\n    }\n    return \"th\";\n}\n\nconst MILLI_IN_30_DAYS = 2592000000;\nconst MILLI_IN_A_DAY = 86400000;\nconst MILLI_IN_A_HOUR = 3600000;\nconst MILLI_IN_A_MIN = 60000;\n\nexport function getTimeDifferenceForNotes(d1, d2) {\n    let difference = d2 - d1;\n\n    if (difference < MILLI_IN_A_HOUR) {\n        let minsGap = Math.floor(difference / MILLI_IN_A_MIN);\n        return minsGap === 0 ? `recently` : `${minsGap}mins ago`;\n    } else if (difference < MILLI_IN_A_DAY) {\n        let hoursGap = Math.floor(difference / MILLI_IN_A_HOUR);\n        if (hoursGap <= 1) return `${hoursGap}hr ago`;\n        else return `${hoursGap}hrs ago`;\n    } else if (difference < MILLI_IN_30_DAYS) {\n        let daysGap = Math.floor(difference / MILLI_IN_A_DAY);\n        if (daysGap <= 1) return `${daysGap}day ago`;\n        else return `${daysGap}days ago`;\n    } else {\n        return `30+days ago`;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}