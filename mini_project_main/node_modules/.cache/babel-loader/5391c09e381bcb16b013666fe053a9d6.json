{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\components\\\\TaskBoard\\\\Divider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { BiShow, BiHide } from \"react-icons/bi\";\nimport { AiOutlineClear } from \"react-icons/ai\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearCompletedTasks, toggleShowCompletedTasks } from \"./../../containers/taskBoard/taskBoardSlice\";\nconst DoneTasksDivider = styled.div`\n    display: flex;\n    margin: 15px 0 15px 25px;\n`;\n_c = DoneTasksDivider;\nconst DividerLine = styled.div`\n    width: 100%;\n    position: relative;\n    margin: 15px;\n    border-bottom: 3px solid #FABB18;\n`;\n_c2 = DividerLine;\nconst DividerIcon = styled.div`\n    width: 90px;\n    position: relative;\n    top: 3px;\n    color: #FABB18;\n    p {\n        margin: 0;\n        font-weight: bold;\n        letter-spacing:${p => p.showCompletedTasks ? \"3px\" : \"1px\"};\n    }\n`;\n_c3 = DividerIcon;\nconst DividerActionDiv = styled.div`\n    display: flex;\n    width: 70px;\n    height: 30px;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 5px;\n    background-color: ${p => p.theme.backgroundSecondary};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    svg {\n        color: #FABB18;\n        cursor:pointer;\n    }\n`;\n_c4 = DividerActionDiv;\nexport default function Divider() {\n  _s();\n\n  const [showActionBtn, setShowActionBtn] = useState(false);\n  const showCompletedTasks = useSelector(s => s.tasks.meta.showCompletedTasks);\n  const completedTasksCount = useSelector(s => s.tasks.meta.completedTasksCount);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Flipped, {\n    flipId: `-1`,\n    children: /*#__PURE__*/_jsxDEV(DoneTasksDivider, {\n      children: [/*#__PURE__*/_jsxDEV(DividerLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DividerIcon, {\n        showCompletedTasks: showCompletedTasks,\n        onMouseEnter: () => setShowActionBtn(true),\n        onMouseLeave: () => setShowActionBtn(false),\n        children: showActionBtn ? /*#__PURE__*/_jsxDEV(DividerActionDiv, {\n          children: [showCompletedTasks ? /*#__PURE__*/_jsxDEV(BiHide, {\n            onClick: () => dispatch(toggleShowCompletedTasks())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(BiShow, {\n            onClick: () => dispatch(toggleShowCompletedTasks())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(AiOutlineClear, {\n            onClick: () => dispatch(clearCompletedTasks())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: showCompletedTasks ? \"DONE\" : `DONE(${completedTasksCount})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DividerLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Divider, \"bwnQX8YerZSHwsC3xZmTTbjN8WA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c5 = Divider;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DoneTasksDivider\");\n$RefreshReg$(_c2, \"DividerLine\");\n$RefreshReg$(_c3, \"DividerIcon\");\n$RefreshReg$(_c4, \"DividerActionDiv\");\n$RefreshReg$(_c5, \"Divider\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/components/TaskBoard/Divider.js"],"names":["React","useState","styled","BiShow","BiHide","AiOutlineClear","Flipped","useDispatch","useSelector","clearCompletedTasks","toggleShowCompletedTasks","DoneTasksDivider","div","DividerLine","DividerIcon","p","showCompletedTasks","DividerActionDiv","theme","backgroundSecondary","Divider","showActionBtn","setShowActionBtn","s","tasks","meta","completedTasksCount","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,gBAA/B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,EAA8BC,wBAA9B,QAA8D,6CAA9D;AAEA,MAAMC,gBAAgB,GAAGT,MAAM,CAACU,GAAI;AACpC;AACA;AACA,CAHA;KAAMD,gB;AAIN,MAAME,WAAW,GAAGX,MAAM,CAACU,GAAI;AAC/B;AACA;AACA;AACA;AACA,CALA;MAAMC,W;AAON,MAAMC,WAAW,GAAGZ,MAAM,CAACU,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAA0BG,CAAD,IAAKA,CAAC,CAACC,kBAAF,GAAqB,KAArB,GAA2B,KAAM;AAC/D;AACA,CAVA;MAAMF,W;AAYN,MAAMG,gBAAgB,GAAGf,MAAM,CAACU,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAyBG,CAAD,IAAOA,CAAC,CAACG,KAAF,CAAQC,mBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMF,gB;AAgBN,eAAe,SAASG,OAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMe,kBAAkB,GAAGR,WAAW,CAAEe,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQC,IAAR,CAAaT,kBAArB,CAAtC;AACA,QAAMU,mBAAmB,GAAGlB,WAAW,CAAEe,CAAD,IAAKA,CAAC,CAACC,KAAF,CAAQC,IAAR,CAAaC,mBAAnB,CAAvC;AACA,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AACA,sBACI,QAAC,OAAD;AAAS,IAAA,MAAM,EAAG,IAAlB;AAAA,2BACI,QAAC,gBAAD;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,kBAAkB,EAAES,kBAAjC;AAAqD,QAAA,YAAY,EAAE,MAAMM,gBAAgB,CAAC,IAAD,CAAzF;AAAiG,QAAA,YAAY,EAAE,MAAMA,gBAAgB,CAAC,KAAD,CAArI;AAAA,kBACKD,aAAa,gBACV,QAAC,gBAAD;AAAA,qBACKL,kBAAkB,gBACf,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMW,QAAQ,CAACjB,wBAAwB,EAAzB;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADe,gBAGf,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMiB,QAAQ,CAACjB,wBAAwB,EAAzB;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAJR,eAMI,QAAC,cAAD;AAAgB,YAAA,OAAO,EAAE,MAAMiB,QAAQ,CAAClB,mBAAmB,EAApB;AAAvC;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADU,gBAUV;AAAA,oBAAIO,kBAAkB,GAAC,MAAD,GAAS,QAAOU,mBAAoB;AAA1D;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA,cAFJ,eAiBI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA5BuBN,O;UAEOZ,W,EACCA,W,EACXD,W;;;MAJGa,O","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { BiShow, BiHide } from \"react-icons/bi\";\nimport { AiOutlineClear } from \"react-icons/ai\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearCompletedTasks, toggleShowCompletedTasks } from \"./../../containers/taskBoard/taskBoardSlice\";\n\nconst DoneTasksDivider = styled.div`\n    display: flex;\n    margin: 15px 0 15px 25px;\n`;\nconst DividerLine = styled.div`\n    width: 100%;\n    position: relative;\n    margin: 15px;\n    border-bottom: 3px solid #FABB18;\n`;\n\nconst DividerIcon = styled.div`\n    width: 90px;\n    position: relative;\n    top: 3px;\n    color: #FABB18;\n    p {\n        margin: 0;\n        font-weight: bold;\n        letter-spacing:${(p)=>p.showCompletedTasks?\"3px\":\"1px\"};\n    }\n`;\n\nconst DividerActionDiv = styled.div`\n    display: flex;\n    width: 70px;\n    height: 30px;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 5px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    svg {\n        color: #FABB18;\n        cursor:pointer;\n    }\n`;\n\nexport default function Divider() {\n    const [showActionBtn, setShowActionBtn] = useState(false);\n    const showCompletedTasks = useSelector((s) => s.tasks.meta.showCompletedTasks);\n    const completedTasksCount = useSelector((s)=>s.tasks.meta.completedTasksCount);\n    const dispatch = useDispatch();\n    return (\n        <Flipped flipId={`-1`}>\n            <DoneTasksDivider>\n                <DividerLine />\n                <DividerIcon showCompletedTasks={showCompletedTasks} onMouseEnter={() => setShowActionBtn(true)} onMouseLeave={() => setShowActionBtn(false)}>\n                    {showActionBtn ? (\n                        <DividerActionDiv>\n                            {showCompletedTasks ? (\n                                <BiHide onClick={() => dispatch(toggleShowCompletedTasks())} />\n                            ) : (\n                                <BiShow onClick={() => dispatch(toggleShowCompletedTasks())} />\n                            )}\n                            <AiOutlineClear onClick={() => dispatch(clearCompletedTasks())} />\n                        </DividerActionDiv>\n                    ) : (\n                        <p>{showCompletedTasks?\"DONE\":`DONE(${completedTasksCount})`}</p>\n                        \n                    )}\n                </DividerIcon>\n                <DividerLine />\n            </DoneTasksDivider>\n        </Flipped>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}