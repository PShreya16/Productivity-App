{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\containers\\\\login\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // var fetch = require(\"fetch\");\n\nimport { Link, useHistory } from 'react-router-dom';\nimport \"../App1.css\";\nexport default function LoginPage() {\n  _s();\n\n  let history = useHistory(); //body will send the data item but it will nto accept the data directly its need to convert it into the string\n\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = async e => {\n    // console.log(e)\n    e.preventDefault();\n    const response = await fetch(\"/api/user/login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: credentials.email,\n        password: credentials.password\n      })\n    });\n    const json = await response.json();\n    console.log(\"hello!!!\" + json); // console.log(json.sucess)\n\n    if (json.sucess) {\n      //save the autheotkem and redirect      \n      localStorage.setItem('token', json.authtoken);\n      alert(\"User Login Successfully Welcome to dashboard!!\");\n      history.push(\"/dashboard\");\n    } else {\n      alert(\"Invalid credential\");\n    }\n  };\n\n  const onChange = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  }; // creating auseState in which we change the state of the data\n  // const [user , setUser]   = useState({\n  //     name : \"\" ,email : \"\" , password : \"\"\n  // })\n  // let name , value;\n  // const handleInputs =(e)=>{\n  //     console.log(e) ;\n  //     name =  e.target.name; //email\n  //     value = e.target.value; //zaidkhan1681@gmail.com\n  //     setUser({... user, [name] : value}) //Here i am storin the data-value to the respected place of variable\n  // }//hooks setting the value\n  // const PostData = async(e) =>{\n  //     e.preventDefault(); //preventing from loading\n  //     //here by using the object destructring we are not getting the data int he form of user.email or user.password \n  //     //here we are simply fetching the data input by the user\n  //     const {name , email , password} = user //user from the useState\n  //     //putting the data at the backend using fetch\n  //     const response = await fetch(\"http://localhost:5000/api/user/login\",{\n  //         method : \"POST\" ,\n  //         header:{\n  //             \"Content-Type\" :\"application/json\"\n  //         } ,\n  //         body : JSON.stringify({\n  //             name,\n  //             email,\n  //             password\n  //         })\n  //     });\n  //     const json = await response.json()\n  //         console.log(json)\n  //     const data = await response.json();\n  //     if (data.status === 400 || !data){\n  //         window.alert(\"Invalid Registration\")\n  //         console.log(\"Invalid Registration\")\n  //     }\n  //     else{\n  //         window.alert(\"Login Success\")\n  //         console.log(\"Login Success\")\n  //         history.push(\"/dashboard\")\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center m-5-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign in to us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"email address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: credentials.email,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: credentials.password,\n          required: true,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: handleSubmit,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"First time? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 32\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"primary-button\",\n          children: \"Back to Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 20\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n} // const history = useHistory();  \n// const [name , setName] = useState(\"\");\n// const [email , setEmail] = useState(\"\");\n// const [password , setPassword] = useState(\"\");\n// useEffect(()=>{\n//     if(localStorage.getItem('user-info')){\n//         history.push(\"/dashboard\")\n//     }\n// })\n// async function login(){\n//     let item = { email , password}\n//     console.log(item) ;\n//    let result = await fetch(\"http://localhost:5000/api/user/login\" ,\n//     {\n//         method: \"POST\" ,\n//         // url: \"/api/user/login\",\n//         headers :{\n//             'Content--Type' : 'application/json',\n//             'Accept': \"application/json, text/plain, */*\",\n//             \"Accept\" : \"application/json\",\n//             'Origin' : 'http://localhost:5000'\n//         },\n//         body : JSON.stringify({item})\n//     });\n//     result = await result.json();\n//     localStorage.setItem(\"user-info \" , JSON.stringify(result))\n//     history.push(\"/dashboard\")\n// }\n\n_s(LoginPage, \"lxxIN53/X6nXCgExL0VfvIM+cY4=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/containers/login/LoginPage.js"],"names":["React","useState","useEffect","Link","useHistory","LoginPage","history","credentials","setCredentials","email","password","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","console","log","sucess","localStorage","setItem","authtoken","alert","push","onChange","target","name","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C,C,CACA;;AAEA,SAASC,IAAT,EAAgBC,UAAhB,QAAiC,kBAAjC;AAEA,OAAO,aAAP;AAIA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,MAAIC,OAAO,GAAGF,UAAU,EAAxB,CADgC,CAIhC;;AACA,QAAM,CAACG,WAAD,EAAeC,cAAf,IAAiCP,QAAQ,CAAC;AAACQ,IAAAA,KAAK,EAAE,EAAR;AAAaC,IAAAA,QAAQ,EAAG;AAAxB,GAAD,CAA/C;;AAEA,QAAMC,YAAY,GAAI,MAAOC,CAAP,IAAY;AAE9B;AACAA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,EAAqB;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACL,wBAAiB;AADZ,OAFoC;AAK7CC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;AAACX,QAAAA,KAAK,EAAGF,WAAW,CAACE,KAArB;AAA6BC,QAAAA,QAAQ,EAAGH,WAAW,CAACG;AAApD,OAAf;AALsC,KAArB,CAA5B;AAQA,UAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,IAAzB,EAb8B,CAc9B;;AACA,QAAGA,IAAI,CAACG,MAAR,EAAe;AACX;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA+BL,IAAI,CAACM,SAApC;AACAC,MAAAA,KAAK,CAAC,gDAAD,CAAL;AACAtB,MAAAA,OAAO,CAACuB,IAAR,CAAa,YAAb;AAEH,KAND,MAOI;AACAD,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACH;AAEJ,GA1BD;;AA4BA,QAAME,QAAQ,GAAGlB,CAAD,IAAK;AACjBJ,IAAAA,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAkB,OAACK,CAAC,CAACmB,MAAF,CAASC,IAAV,GAAkBpB,CAAC,CAACmB,MAAF,CAASE;AAA7C,KAAD,CAAd;AAEH,GAHD,CAnCgC,CAwChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,MAAM,EAAC,MAAd;AAAqB,MAAA,QAAQ,EAAEtB,YAA/B;AAAA,8BAEK;AAAA,gCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eACgC;AAAA;AAAA;AAAA;AAAA,gBADhC,eAEG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,KAAK,EAAEJ,WAAW,CAACE,KAAnD;AAA2D,UAAA,QAAQ,EAAEqB;AAArE;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,eAMI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,KAAK,EAAEvB,WAAW,CAACG,QAA1D;AAAoE,UAAA,QAAQ,MAA5E;AAA6E,UAAA,QAAQ,EAAEoB;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAYI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA,+BACA;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAEnB,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAkBI;AAAA,8BACI;AAAA,gDAAe,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAAG,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,C,CAkBE;AAGC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;GA3KoBN,S;UACND,U;;;KADMC,S","sourcesContent":["import React , {useState , useEffect} from 'react'\n// var fetch = require(\"fetch\");\n\nimport { Link , useHistory} from 'react-router-dom'\n\nimport \"../App1.css\"\n\n\n\nexport default function LoginPage() {\n    let history = useHistory();\n \n\n    //body will send the data item but it will nto accept the data directly its need to convert it into the string\n    const [credentials , setCredentials] = useState({email: \"\" , password : \"\"})\n\n    const handleSubmit =  async (e) =>{\n      \n        // console.log(e)\n        e.preventDefault();\n        const response = await fetch(\"/api/user/login\" , {\n            method: \"POST\" ,\n            headers :{  \n                'Content-Type' : 'application/json'\n            },\n            body : JSON.stringify({email:  credentials.email , password : credentials.password})\n    \n        });\n        const json = await response.json()\n        console.log(\"hello!!!\" + json)\n        // console.log(json.sucess)\n        if(json.sucess){\n            //save the autheotkem and redirect      \n            localStorage.setItem('token' , json.authtoken)\n            alert(\"User Login Successfully Welcome to dashboard!!\")\n            history.push(\"/dashboard\")\n\n        }\n        else{   \n            alert(\"Invalid credential\")\n        }\n    \n    }\n\n    const onChange =(e)=>{\n        setCredentials({...credentials , [e.target.name] : e.target.value})\n\n    }\n\n    // creating auseState in which we change the state of the data\n    // const [user , setUser]   = useState({\n    //     name : \"\" ,email : \"\" , password : \"\"\n    // })\n    // let name , value;\n    // const handleInputs =(e)=>{\n    //     console.log(e) ;\n    //     name =  e.target.name; //email\n    //     value = e.target.value; //zaidkhan1681@gmail.com\n    //     setUser({... user, [name] : value}) //Here i am storin the data-value to the respected place of variable\n\n       \n    // }//hooks setting the value\n\n    // const PostData = async(e) =>{\n    //     e.preventDefault(); //preventing from loading\n    //     //here by using the object destructring we are not getting the data int he form of user.email or user.password \n    //     //here we are simply fetching the data input by the user\n    //     const {name , email , password} = user //user from the useState\n    //     //putting the data at the backend using fetch\n    //     const response = await fetch(\"http://localhost:5000/api/user/login\",{\n    //         method : \"POST\" ,\n    //         header:{\n    //             \"Content-Type\" :\"application/json\"\n    //         } ,\n    //         body : JSON.stringify({\n    //             name,\n    //             email,\n    //             password\n    //         })\n\n    //     });\n    //     const json = await response.json()\n    //         console.log(json)\n        \n         \n\n    //     const data = await response.json();\n    //     if (data.status === 400 || !data){\n    //         window.alert(\"Invalid Registration\")\n    //         console.log(\"Invalid Registration\")\n\n    //     }\n    //     else{\n    //         window.alert(\"Login Success\")\n    //         console.log(\"Login Success\")\n    //         history.push(\"/dashboard\")\n\n    //     }\n\n        \n\n    // }\n\n    \n    return (\n        <div className=\"text-center m-5-auto\" >\n            <h2 >Sign in to us</h2>\n            <form  method=\"POST\" onSubmit={handleSubmit} >\n               \n                 <p> \n                    <label>email address </label><br/>\n                    <input type=\"text\" name=\"email\" value={credentials.email } onChange={onChange}  />\n                </p>\n                <p>\n                    <label>Password</label>\n                    {/* <Link to=\"/forget-password\"><label className=\"right-label\">Forget password?</label></Link> */}\n                    <br/>\n                    <input type=\"password\" name=\"password\" value={credentials.password} required onChange={onChange}/>\n                </p>\n                <Link to=\"/dashboard\">\n                <button className=\"primary-button\" onClick={handleSubmit} >Log in</button>\n            </Link>\n            </form>\n            <footer>\n                <p>First time? <Link to=\"/register\">Create an account</Link>.</p>\n                <p><Link to=\"/\" className='primary-button'>Back to Homepage</Link>.</p>\n            </footer>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   // const history = useHistory();  \n\n\n    // const [name , setName] = useState(\"\");\n    // const [email , setEmail] = useState(\"\");\n    // const [password , setPassword] = useState(\"\");\n\n    // useEffect(()=>{\n    //     if(localStorage.getItem('user-info')){\n    //         history.push(\"/dashboard\")\n    //     }\n    // })\n\n    // async function login(){\n    //     let item = { email , password}\n    //     console.log(item) ;\n    //    let result = await fetch(\"http://localhost:5000/api/user/login\" ,\n    //     {\n    //         method: \"POST\" ,\n    //         // url: \"/api/user/login\",\n    //         headers :{\n    //             'Content--Type' : 'application/json',\n    //             'Accept': \"application/json, text/plain, */*\",\n    //             \"Accept\" : \"application/json\",\n    //             'Origin' : 'http://localhost:5000'\n    //         },\n    //         body : JSON.stringify({item})\n    //     });\n\n    //     result = await result.json();\n    //     localStorage.setItem(\"user-info \" , JSON.stringify(result))\n    //     history.push(\"/dashboard\")\n\n    // }"]},"metadata":{},"sourceType":"module"}