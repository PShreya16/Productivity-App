{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\components\\\\notes\\\\NewNoteButton.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { colorOptions, create } from \"../../containers/notes/notesSlice\";\nconst NewNoteButtonContainer = styled.div`\n    width: ${p => p.isGridView ? \"215px\" : \"60%\"};\n    height: ${p => p.isGridView ? \"160px\" : \"110px\"};\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    cursor: pointer;\n    border-radius: 12px;\n    border: 2px dashed ${p => p.theme.primaryText};\n    background-color: ${p => p.theme.backgroundSecondary};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`;\n_c = NewNoteButtonContainer;\nconst AddIcon = styled.div`\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    svg {\n        color: ${p => p.theme.primaryText};\n        font-size: 2em;\n        font-weight: bolder;\n    }\n`;\n_c2 = AddIcon;\nexport function NewNoteButton({\n  setNoteInPreview,\n  isGridView\n}) {\n  _s();\n\n  let dispatch = useDispatch();\n  const meta = useSelector(state => state.notes.meta);\n\n  const handleNewNoteAction = () => {\n    let newNote = {\n      id: Math.floor(Math.random() * 10000),\n      globalKey: meta.globalKey,\n      content: \"\",\n      color: colorOptions.white,\n      updatedAt: new Date().toISOString()\n    };\n    dispatch(create(newNote));\n    setNoteInPreview(newNote);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NewNoteButtonContainer, {\n      isGridView: isGridView,\n      onClick: () => handleNewNoteAction(),\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {\n        children: /*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(NewNoteButton, \"z655g5YqHusBoYxc/MwcozURWKQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c3 = NewNoteButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NewNoteButtonContainer\");\n$RefreshReg$(_c2, \"AddIcon\");\n$RefreshReg$(_c3, \"NewNoteButton\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/components/notes/NewNoteButton.js"],"names":["React","styled","AiOutlinePlus","useDispatch","useSelector","colorOptions","create","NewNoteButtonContainer","div","p","isGridView","theme","primaryText","backgroundSecondary","AddIcon","NewNoteButton","setNoteInPreview","dispatch","meta","state","notes","handleNewNoteAction","newNote","id","Math","floor","random","globalKey","content","color","white","updatedAt","Date","toISOString"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAoC,mCAApC;AAEA,MAAMC,sBAAsB,GAAGN,MAAM,CAACO,GAAI;AAC1C,aAAcC,CAAD,IAAQA,CAAC,CAACC,UAAF,GAAe,OAAf,GAAyB,KAAO;AACrD,cAAeD,CAAD,IAAQA,CAAC,CAACC,UAAF,GAAe,OAAf,GAAyB,OAAS;AACxD;AACA;AACA;AACA;AACA;AACA,yBAA0BD,CAAD,IAAOA,CAAC,CAACE,KAAF,CAAQC,WAAY;AACpD,wBAAyBH,CAAD,IAAOA,CAAC,CAACE,KAAF,CAAQE,mBAAoB;AAC3D;AACA;AACA,CAZA;KAAMN,sB;AAcN,MAAMO,OAAO,GAAGb,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,iBAAkBC,CAAD,IAAOA,CAAC,CAACE,KAAF,CAAQC,WAAY;AAC5C;AACA;AACA;AACA,CAVA;MAAME,O;AAYN,OAAO,SAASC,aAAT,CAAuB;AAAEC,EAAAA,gBAAF;AAAqBN,EAAAA;AAArB,CAAvB,EAA0D;AAAA;;AAC7D,MAAIO,QAAQ,GAAGd,WAAW,EAA1B;AACA,QAAMe,IAAI,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,IAAxB,CAAxB;;AAEA,QAAMG,mBAAmB,GAAG,MAAM;AAC9B,QAAIC,OAAO,GAAG;AACVC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADM;AAEVC,MAAAA,SAAS,EAAET,IAAI,CAACS,SAFN;AAGVC,MAAAA,OAAO,EAAE,EAHC;AAIVC,MAAAA,KAAK,EAAExB,YAAY,CAACyB,KAJV;AAKVC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AALD,KAAd;AAOAhB,IAAAA,QAAQ,CAACX,MAAM,CAACgB,OAAD,CAAP,CAAR;AACAN,IAAAA,gBAAgB,CAACM,OAAD,CAAhB;AACH,GAVD;;AAWA,sBACI;AAAA,2BACI,QAAC,sBAAD;AAAwB,MAAA,UAAU,EAAEZ,UAApC;AAAgD,MAAA,OAAO,EAAE,MAAMW,mBAAmB,EAAlF;AAAA,6BACI,QAAC,OAAD;AAAA,+BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH;;GAxBeN,a;UACGZ,W,EACFC,W;;;MAFDW,a","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { colorOptions, create} from \"../../containers/notes/notesSlice\";\n\nconst NewNoteButtonContainer = styled.div`\n    width: ${(p) => (p.isGridView ? \"215px\" : \"60%\")};\n    height: ${(p) => (p.isGridView ? \"160px\" : \"110px\")};\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    cursor: pointer;\n    border-radius: 12px;\n    border: 2px dashed ${(p) => p.theme.primaryText};\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`;\n\nconst AddIcon = styled.div`\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    svg {\n        color: ${(p) => p.theme.primaryText};\n        font-size: 2em;\n        font-weight: bolder;\n    }\n`;\n\nexport function NewNoteButton({ setNoteInPreview , isGridView }) {\n    let dispatch = useDispatch();\n    const meta = useSelector((state) => state.notes.meta);\n\n    const handleNewNoteAction = () => {\n        let newNote = {\n            id: Math.floor(Math.random() * 10000),\n            globalKey: meta.globalKey,\n            content: \"\",\n            color: colorOptions.white,\n            updatedAt: new Date().toISOString(),\n        };\n        dispatch(create(newNote));\n        setNoteInPreview(newNote);\n    };\n    return (\n        <>\n            <NewNoteButtonContainer isGridView={isGridView} onClick={() => handleNewNoteAction()}>\n                <AddIcon>\n                    <AiOutlinePlus />\n                </AddIcon>\n            </NewNoteButtonContainer>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}