{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\components\\\\MiscBoard\\\\TimeProgressCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { getFormattedListTimeSummary } from \"../../helpers\";\nimport { SummaryCardClock } from \"./../customIcons\";\nconst ProgressCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    position: relative;\n    width: 95%;\n    height: 45%;\n    border-radius: 10px;\n    border-left: 5px solid #0000cd;\n    color: ${p => p.theme.primaryText};\n    background-color: ${p => p.theme.type === \"l\" ? \"#f0f8ff\" : \"#00213D\"};\n`;\n_c = ProgressCard;\nconst ProgressCardText = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 90%;\n    height: 45%;\n    /* background-color: #d1effa; */\n    span {\n        font-weight: bold;\n        font-size: 0.7em;\n        opacity:0.6;\n    }\n`;\n_c2 = ProgressCardText;\nconst FormattedTimeDiv = styled.div`\n    display: flex;\n    align-items: center;\n    p {\n        margin: 0;\n        font-weight: bold;\n        font-size: 1.1em;\n    }\n    span {\n        margin: 0 3px;\n        font-size: 0.5em;\n    }\n`;\n_c3 = FormattedTimeDiv;\nconst absoluteIconStyles = css`\n    position: absolute;\n    top: 5px;\n    right: 5px;\n`;\nconst ClockIconDiv = styled.div`\n    width:${p => p.noTasks ? \"45%\" : \"20px\"};\n    ${p => p.noTasks ? \"\" : absoluteIconStyles}\n    svg {\n        color: #0000cd;\n        opacity: ${p => p.noTasks ? \"0.7\" : 1};\n    }\n`;\n_c4 = ClockIconDiv;\nexport function TimeProgressCard() {\n  _s();\n\n  const totalTaskListTime = useSelector(state => state.tasks.meta.totalTaskListTime);\n  const remainingTaskListTime = useSelector(state => state.tasks.meta.remainingTaskListTime);\n  const focusedTime = totalTaskListTime - remainingTaskListTime;\n  const rTLTObj = getFormattedListTimeSummary(focusedTime);\n  let rTLTHours = rTLTObj.hours;\n  let rTLTMins = rTLTObj.mins;\n  const tTLTObj = getFormattedListTimeSummary(totalTaskListTime);\n  let tTLTHours = tTLTObj.hours;\n  let tTLTMins = tTLTObj.mins;\n  return /*#__PURE__*/_jsxDEV(ProgressCard, {\n    children: [totalTaskListTime !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressCardText, {\n        children: [/*#__PURE__*/_jsxDEV(FormattedTimeDiv, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: rTLTHours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: rTLTMins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"completed time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProgressCardText, {\n        children: [/*#__PURE__*/_jsxDEV(FormattedTimeDiv, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: tTLTHours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tTLTMins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"total time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ClockIconDiv, {\n      noTasks: totalTaskListTime === 0,\n      children: /*#__PURE__*/_jsxDEV(SummaryCardClock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimeProgressCard, \"RDJ1WmPrDk6HZ6Zv6F8+uz/nSBY=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c5 = TimeProgressCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ProgressCard\");\n$RefreshReg$(_c2, \"ProgressCardText\");\n$RefreshReg$(_c3, \"FormattedTimeDiv\");\n$RefreshReg$(_c4, \"ClockIconDiv\");\n$RefreshReg$(_c5, \"TimeProgressCard\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/components/MiscBoard/TimeProgressCard.js"],"names":["React","styled","css","useSelector","getFormattedListTimeSummary","SummaryCardClock","ProgressCard","div","p","theme","primaryText","type","ProgressCardText","FormattedTimeDiv","absoluteIconStyles","ClockIconDiv","noTasks","TimeProgressCard","totalTaskListTime","state","tasks","meta","remainingTaskListTime","focusedTime","rTLTObj","rTLTHours","hours","rTLTMins","mins","tTLTObj","tTLTHours","tTLTMins"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled , {css} from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { getFormattedListTimeSummary } from \"../../helpers\";\nimport { SummaryCardClock } from \"./../customIcons\";\n\nconst ProgressCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    position: relative;\n    width: 95%;\n    height: 45%;\n    border-radius: 10px;\n    border-left: 5px solid #0000cd;\n    color: ${p=>p.theme.primaryText};\n    background-color: ${(p) => (p.theme.type === \"l\" ? \"#f0f8ff\" : \"#00213D\")};\n`;\n\nconst ProgressCardText = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 90%;\n    height: 45%;\n    /* background-color: #d1effa; */\n    span {\n        font-weight: bold;\n        font-size: 0.7em;\n        opacity:0.6;\n    }\n`;\n\nconst FormattedTimeDiv = styled.div`\n    display: flex;\n    align-items: center;\n    p {\n        margin: 0;\n        font-weight: bold;\n        font-size: 1.1em;\n    }\n    span {\n        margin: 0 3px;\n        font-size: 0.5em;\n    }\n`;\n\nconst absoluteIconStyles = css`\n    position: absolute;\n    top: 5px;\n    right: 5px;\n`;\n\nconst ClockIconDiv = styled.div`\n    width:${(p) => (p.noTasks ? \"45%\" : \"20px\")};\n    ${(p) => (p.noTasks ? \"\" : absoluteIconStyles)}\n    svg {\n        color: #0000cd;\n        opacity: ${(p) => (p.noTasks ? \"0.7\" : 1)};\n    }\n`;\n\nexport function TimeProgressCard() {\n    const totalTaskListTime = useSelector((state) => state.tasks.meta.totalTaskListTime);\n    const remainingTaskListTime = useSelector((state) => state.tasks.meta.remainingTaskListTime);\n    const focusedTime = totalTaskListTime - remainingTaskListTime;\n    const rTLTObj = getFormattedListTimeSummary(focusedTime);\n    let rTLTHours = rTLTObj.hours;\n    let rTLTMins = rTLTObj.mins;\n\n    const tTLTObj = getFormattedListTimeSummary(totalTaskListTime);\n    let tTLTHours = tTLTObj.hours;\n    let tTLTMins = tTLTObj.mins;\n    return (\n        <ProgressCard>\n            {totalTaskListTime !== 0 && (\n                <>\n                    <ProgressCardText>\n                        <FormattedTimeDiv>\n                            <p>{rTLTHours}</p>\n                            <span>h</span>\n                            <p>{rTLTMins}</p>\n                            <span>m</span>\n                        </FormattedTimeDiv>\n\n                        <span>completed time</span>\n                    </ProgressCardText>\n                    <ProgressCardText>\n                        <FormattedTimeDiv>\n                            <p>{tTLTHours}</p>\n                            <span>h</span>\n                            <p>{tTLTMins}</p>\n                            <span>m</span>\n                        </FormattedTimeDiv>\n                        <span>total time</span>\n                    </ProgressCardText>\n                </>\n            )}\n            <ClockIconDiv noTasks={totalTaskListTime === 0}>\n                <SummaryCardClock />\n            </ClockIconDiv>\n        </ProgressCard>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}