{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport tasksReducer from \"../containers/taskBoard/taskBoardSlice\";\nimport settingsReducer from \"../containers/settings/settingsSlice\";\nimport notesReducer from \"../containers/notes/notesSlice\";\nimport { getStateFromLocalStorage, setStateInLocalStorage, clearIfStateInvalidated } from \"./localStorageUtils\";\nimport { debounce } from \"../helpers\";\nlet store = configureStore({\n  reducer: {\n    tasks: tasksReducer,\n    settings: settingsReducer,\n    notes: notesReducer\n  },\n  preloadedState: getStateFromLocalStorage()\n});\nstore.subscribe(debounce(() => {\n  // console.log(\"ls-used\");\n  setStateInLocalStorage(store.getState());\n}, 200));\nclearIfStateInvalidated();\nexport default store;","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/store/index.js"],"names":["configureStore","tasksReducer","settingsReducer","notesReducer","getStateFromLocalStorage","setStateInLocalStorage","clearIfStateInvalidated","debounce","store","reducer","tasks","settings","notes","preloadedState","subscribe","getState"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,wBAAT,EAAmCC,sBAAnC,EAA2DC,uBAA3D,QAA0F,qBAA1F;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,IAAIC,KAAK,GAAGR,cAAc,CAAC;AACvBS,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAET,YADF;AAELU,IAAAA,QAAQ,EAAET,eAFL;AAGLU,IAAAA,KAAK,EAAET;AAHF,GADc;AAMvBU,EAAAA,cAAc,EAAET,wBAAwB;AANjB,CAAD,CAA1B;AASAI,KAAK,CAACM,SAAN,CACIP,QAAQ,CAAC,MAAM;AACX;AACAF,EAAAA,sBAAsB,CAACG,KAAK,CAACO,QAAN,EAAD,CAAtB;AACH,CAHO,EAGL,GAHK,CADZ;AAOAT,uBAAuB;AAEvB,eAAeE,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport tasksReducer from \"../containers/taskBoard/taskBoardSlice\";\nimport settingsReducer from \"../containers/settings/settingsSlice\";\nimport notesReducer from \"../containers/notes/notesSlice\";\nimport { getStateFromLocalStorage, setStateInLocalStorage, clearIfStateInvalidated } from \"./localStorageUtils\";\nimport { debounce } from \"../helpers\";\n\nlet store = configureStore({\n    reducer: {\n        tasks: tasksReducer,\n        settings: settingsReducer,\n        notes: notesReducer,\n    },\n    preloadedState: getStateFromLocalStorage(),\n});\n\nstore.subscribe(\n    debounce(() => {\n        // console.log(\"ls-used\");\n        setStateInLocalStorage(store.getState());\n    }, 200)\n);\n\nclearIfStateInvalidated();\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}