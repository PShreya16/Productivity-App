{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\components\\\\notes\\\\NoteCard.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { getTimeDifferenceForNotes } from \"../../helpers\";\nconst NoteCardContainer = styled.div`\n    width: ${p => p.isGridView ? \"215px\" : \"60%\"};\n    height: ${p => p.isGridView ? \"160px\" : \"110px\"};\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    cursor: pointer;\n    border-radius: 12px;\n    background-color: ${p => p.noteColor};\n    filter: ${p => `brightness(${p.theme.brightness})`};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`;\n_c = NoteCardContainer;\nconst NoteCardContent = styled.div`\n    display: inline-block;\n    height: 80%;\n    p {\n        margin-right: 5px;\n        margin-left: 15px;\n        font-weight: bold;\n        font-size: 0.9em;\n    }\n    word-wrap: break-word;\n`;\n_c2 = NoteCardContent;\nconst NoteCardStatus = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    height: 20%;\n    p {\n        border-top: 1px solid grey;\n        padding: 2px 10px;\n        color: rgba(0, 0, 0, 0.6);\n        font-size: 0.7em;\n    }\n`;\n_c3 = NoteCardStatus;\n\nfunction previewNote(str, isGridView) {\n  if (isGridView) {\n    let nextLineIdx = str.indexOf(\"\\n\");\n    if (nextLineIdx !== -1) str = str.substring(0, nextLineIdx);\n    if (str.length === 0) str = \"New Note\";\n    if (str.length <= 90) return str;else return str.substring(0, 90) + \"...\";\n  } else {\n    if (str.length === 0) str = \"New Note\";\n    if (str.length <= 160) return str;else return str.substring(0, 160) + \"...\";\n  }\n}\n\nexport function NoteCard({\n  note,\n  setNoteInPreview,\n  isGridView\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NoteCardContainer, {\n      isGridView: isGridView,\n      noteColor: note.color,\n      onClick: () => setNoteInPreview(note),\n      children: [/*#__PURE__*/_jsxDEV(NoteCardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: previewNote(note.content, isGridView)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NoteCardStatus, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"updated \", getTimeDifferenceForNotes(new Date(note.updatedAt).getTime(), new Date().getTime())]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c4 = NoteCard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"NoteCardContainer\");\n$RefreshReg$(_c2, \"NoteCardContent\");\n$RefreshReg$(_c3, \"NoteCardStatus\");\n$RefreshReg$(_c4, \"NoteCard\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/components/notes/NoteCard.js"],"names":["React","styled","getTimeDifferenceForNotes","NoteCardContainer","div","p","isGridView","noteColor","theme","brightness","NoteCardContent","NoteCardStatus","previewNote","str","nextLineIdx","indexOf","substring","length","NoteCard","note","setNoteInPreview","color","content","Date","updatedAt","getTime"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,yBAAT,QAA0C,eAA1C;AAEA,MAAMC,iBAAiB,GAAGF,MAAM,CAACG,GAAI;AACrC,aAAcC,CAAD,IAAQA,CAAC,CAACC,UAAF,GAAe,OAAf,GAAyB,KAAO;AACrD,cAAeD,CAAD,IAAQA,CAAC,CAACC,UAAF,GAAe,OAAf,GAAyB,OAAS;AACxD;AACA;AACA;AACA;AACA;AACA,wBAAyBD,CAAD,IAAOA,CAAC,CAACE,SAAU;AAC3C,cAAeF,CAAD,IAAQ,cAAaA,CAAC,CAACG,KAAF,CAAQC,UAAW,GAAG;AACzD;AACA;AACA,CAZA;KAAMN,iB;AAcN,MAAMO,eAAe,GAAGT,MAAM,CAACG,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMM,e;AAYN,MAAMC,cAAc,GAAGV,MAAM,CAACG,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMO,c;;AAaN,SAASC,WAAT,CAAqBC,GAArB,EAA0BP,UAA1B,EAAsC;AAClC,MAAIA,UAAJ,EAAgB;AACZ,QAAIQ,WAAW,GAAGD,GAAG,CAACE,OAAJ,CAAY,IAAZ,CAAlB;AACA,QAAID,WAAW,KAAK,CAAC,CAArB,EAAwBD,GAAG,GAAGA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiBF,WAAjB,CAAN;AACxB,QAAID,GAAG,CAACI,MAAJ,KAAe,CAAnB,EAAsBJ,GAAG,GAAG,UAAN;AACtB,QAAIA,GAAG,CAACI,MAAJ,IAAc,EAAlB,EAAsB,OAAOJ,GAAP,CAAtB,KACK,OAAOA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,EAAjB,IAAuB,KAA9B;AACR,GAND,MAMO;AACH,QAAIH,GAAG,CAACI,MAAJ,KAAe,CAAnB,EAAsBJ,GAAG,GAAG,UAAN;AACtB,QAAIA,GAAG,CAACI,MAAJ,IAAc,GAAlB,EAAuB,OAAOJ,GAAP,CAAvB,KACK,OAAOA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,GAAjB,IAAwB,KAA/B;AACR;AACJ;;AAED,OAAO,SAASE,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,gBAAR;AAA0Bd,EAAAA;AAA1B,CAAlB,EAA0D;AAC7D,sBACI;AAAA,2BACI,QAAC,iBAAD;AAAmB,MAAA,UAAU,EAAEA,UAA/B;AAA2C,MAAA,SAAS,EAAEa,IAAI,CAACE,KAA3D;AAAkE,MAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACD,IAAD,CAAjG;AAAA,8BACI,QAAC,eAAD;AAAA,+BACI;AAAA,oBAAIP,WAAW,CAACO,IAAI,CAACG,OAAN,EAAchB,UAAd;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,cAAD;AAAA,+BACI;AAAA,iCACI;AAAA,mCAAYJ,yBAAyB,CAAC,IAAIqB,IAAJ,CAASJ,IAAI,CAACK,SAAd,EAAyBC,OAAzB,EAAD,EAAqC,IAAIF,IAAJ,GAAWE,OAAX,EAArC,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH;MAhBeP,Q","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { getTimeDifferenceForNotes } from \"../../helpers\";\n\nconst NoteCardContainer = styled.div`\n    width: ${(p) => (p.isGridView ? \"215px\" : \"60%\")};\n    height: ${(p) => (p.isGridView ? \"160px\" : \"110px\")};\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    cursor: pointer;\n    border-radius: 12px;\n    background-color: ${(p) => p.noteColor};\n    filter: ${(p) => `brightness(${p.theme.brightness})`};\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.4);\n`;\n\nconst NoteCardContent = styled.div`\n    display: inline-block;\n    height: 80%;\n    p {\n        margin-right: 5px;\n        margin-left: 15px;\n        font-weight: bold;\n        font-size: 0.9em;\n    }\n    word-wrap: break-word;\n`;\n\nconst NoteCardStatus = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    height: 20%;\n    p {\n        border-top: 1px solid grey;\n        padding: 2px 10px;\n        color: rgba(0, 0, 0, 0.6);\n        font-size: 0.7em;\n    }\n`;\n\nfunction previewNote(str, isGridView) {\n    if (isGridView) {\n        let nextLineIdx = str.indexOf(\"\\n\");\n        if (nextLineIdx !== -1) str = str.substring(0, nextLineIdx);\n        if (str.length === 0) str = \"New Note\";\n        if (str.length <= 90) return str;\n        else return str.substring(0, 90) + \"...\";\n    } else {\n        if (str.length === 0) str = \"New Note\";\n        if (str.length <= 160) return str;\n        else return str.substring(0, 160) + \"...\";\n    }\n}\n\nexport function NoteCard({ note, setNoteInPreview, isGridView }) {\n    return (\n        <>\n            <NoteCardContainer isGridView={isGridView} noteColor={note.color} onClick={() => setNoteInPreview(note)}>\n                <NoteCardContent>\n                    <p>{previewNote(note.content,isGridView)}</p>\n                </NoteCardContent>\n\n                <NoteCardStatus>\n                    <p>\n                        <i>updated {getTimeDifferenceForNotes(new Date(note.updatedAt).getTime(), new Date().getTime())}</i>\n                    </p>\n                </NoteCardStatus>\n            </NoteCardContainer>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}