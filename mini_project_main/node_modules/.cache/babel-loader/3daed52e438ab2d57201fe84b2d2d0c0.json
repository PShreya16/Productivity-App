{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\components\\\\TaskBoard\\\\TaskCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { remove, updateTaskContent, toggleIsCompleted, rearrange, updateTaskTime } from \"../../containers/taskBoard/taskBoardSlice\";\nimport { focusOnTask, resetFocussedTask, toggleIsRunning, updateTaskLabel, updateTaskObject, updateLabelCount, toggleSoundscapeState } from \"../../containers/taskBoard/taskBoardSlice\";\nimport styled from \"styled-components\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { DragIcon } from \"./../customIcons\";\nimport { formattedTimeString, updatePageTitle } from \"../../helpers\";\nimport bulb from \"./../../images/bulb.svg\";\nimport glowBulb from \"./../../images/glowBulb.svg\";\nimport tickmark from \"./../../images/tickmark.svg\";\nimport TaskLabelSelect from \"./../../components/TaskBoard/TaskLabelSelect\";\nimport { ONE_DAY } from \"./../../helpers/constants\";\nimport { BsExclamationCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from \"react-tooltip\";\nconst TaskCardContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 376px; // % not working here (maybe due to animation library wrappers)\n    height: 110px;\n    margin-top: 15px;\n    cursor: default !important;\n    /* background-color: #fff4e1; */\n`;\n_c = TaskCardContainer;\nconst TaskCardDragIcon = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 5%;\n    height: 100%;\n    /* background-color: #ff09ac; */\n    svg {\n        cursor: url(\"https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur\"), default !important;\n        color: ${p => p.theme.primaryText};\n    }\n`;\n_c2 = TaskCardDragIcon;\n\nconst getTaskCardDivBorderLabelColor = labelColor => labelColor !== null ? `7px solid ${labelColor}` : \"none\";\n\nconst TaskCardDiv = styled.div`\n    display: flex;\n    justify-content: space-around;\n    flex-direction: row;\n    height: 100%;\n    width: 90%;\n    border-radius: 10px;\n    position: relative;\n    border-right: ${p => getTaskCardDivBorderLabelColor(p.labelColor)};\n    background-color: ${p => p.theme.backgroundSecondary};\n    -webkit-box-shadow: ${p => p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\"};\n    box-shadow: ${p => p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\"};\n`;\n_c3 = TaskCardDiv;\nconst OldTaskStatus = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    position: absolute;\n    top: 7px;\n    right: 7px;\n    color: #fabb18;\n    svg {\n        font-size: 0.9em;\n    }\n`;\n_c4 = OldTaskStatus;\nconst TaskStatusDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 15%;\n    /* background-color: #f8f8ff; */\n    position: relative;\n    color: ${p => p.theme.primaryText};\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.7em;\n        cursor: text;\n    }\n    img {\n        width: ${p => p.isCompleted ? \"40px\" : \"60px\"};\n    }\n`;\n_c5 = TaskStatusDiv;\nconst TaskDetailsDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    height: 100%;\n    width: 75%;\n    /* margin: 0 0 0 10px; */\n    /* background-color: #fff1fc; */\n`;\n_c6 = TaskDetailsDiv;\nconst TaskContentDiv = styled.div`\n    display: flex;\n    align-items: center;\n    height: 65%;\n    margin: 0 0 0 5px;\n    word-wrap: break-word;\n    color: ${p => p.theme.primaryText};\n    /* background-color: #fffcec; */\n    p {\n        font-size: 0.9em;\n        font-weight: bold;\n        min-width: 0;\n        cursor: text;\n    }\n`;\n_c7 = TaskContentDiv;\nconst TaskEditInput = styled.textarea`\n    resize: none;\n    height: 90%;\n    width: 100%;\n    font-size: 0.9em;\n    overflow: hidden;\n    vertical-align: center;\n    font-weight: bold;\n    background-color: ${p => p.theme.backgroundSecondary};\n    color: ${p => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${p => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 5px;\n    }\n`;\n_c8 = TaskEditInput;\nconst TimeEditInput = styled.input`\n    height: 15px;\n    width: 30px;\n    margin-top: 5px;\n    text-align: center;\n    font-weight: bold;\n    background-color: ${p => p.theme.backgroundSecondary};\n    color: ${p => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${p => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 2px;\n    }\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    }\n`;\n_c9 = TimeEditInput;\nconst TaskActionButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    color: ${p => p.theme.primaryText};\n    &:hover {\n        background-color: #fabb18;\n        p {\n            color: ${p => p.theme.secondaryText};\n        }\n    }\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n_c10 = TaskActionButton;\nconst TaskLabelContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    &:hover {\n        background-color: ${p => p.theme.type === \"l\" ? \"#f7f7fa\" : \"#121212\"};\n    }\n    p {\n        margin: 5px;\n        color: ${p => p.labelColor !== null ? p.labelColor : \"#c1c1d7\"};\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n_c11 = TaskLabelContainer;\nconst TaskDeleteButton = styled.div`\n    height: 80%;\n    cursor: pointer;\n    margin-left: auto;\n    color: #fabb18;\n    &:hover {\n        color: red;\n    }\n`;\n_c12 = TaskDeleteButton;\nconst TaskControllerDiv = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 25%;\n    /* background-color: #fffa91; */\n    svg {\n        font-size: 0.8em;\n        margin: 5px;\n    }\n`;\n_c13 = TaskControllerDiv;\nconst OldTaskControllerDiv = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 25%;\n`;\n_c14 = OldTaskControllerDiv;\n\nfunction previewTask(str) {\n  if (str.length <= 60) return str;else return str.substring(0, 60) + \"...\";\n}\n\nexport default function TaskCard({\n  task,\n  taskIndex,\n  focussedTaskGlobalKey,\n  forwardRBDProvided,\n  isFocussed,\n  focussedTaskIndex\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [taskUnderEdit, setTaskUnderEdit] = useState(false);\n  const [updatedTaskContent, setUpdatedTaskContent] = useState(task.content);\n  const [timeUnderEdit, setTimeUnderEdit] = useState(false);\n  const [updatedTime, setUpdatedTime] = useState(Math.floor(task.time / 1000 / 60));\n  const [labelUnderEdit, setLabelUnderEdit] = useState(false);\n  const [showDragIcon, setShowDragIcon] = useState(false);\n  const labels = useSelector(s => s.tasks.labels);\n  let isOldTask = false && !task.isCompleted && new Date() - new Date(task.createdAt) > ONE_DAY;\n\n  function submitUpdatedTaskContent(e) {\n    if (e.key === \"Enter\" && updatedTaskContent.trim().length >= 3) {\n      dispatch(updateTaskContent({\n        id: task.id,\n        updatedTaskContent\n      }));\n      setTaskUnderEdit(false);\n    }\n  }\n\n  function submitUpdatedTime(e) {\n    if (e.key === \"Enter\") {\n      dispatch(updateTaskTime({\n        id: task.id,\n        updatedTime\n      }));\n      setTimeUnderEdit(false);\n    }\n  }\n\n  function markTaskAsDoneHandler() {\n    if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n    if (task.isRunning) dispatch(toggleIsRunning({\n      idx: taskIndex\n    }));\n\n    if (isFocussed) {\n      updatePageTitle(\"Fokus\");\n      dispatch(resetFocussedTask());\n    }\n\n    dispatch(toggleIsCompleted(task.id));\n    dispatch(rearrange({\n      id: task.id,\n      markedAsComplete: true\n    }));\n    if (taskIndex === focussedTaskIndex) dispatch(toggleSoundscapeState(false));\n  }\n\n  function markTaskAsUndoneHandler() {\n    if (focussedTaskIndex !== -1 && focussedTaskGlobalKey < task.globalKey) {\n      dispatch(focusOnTask(focussedTaskIndex + 1));\n    }\n\n    dispatch(toggleIsCompleted(task.id));\n    dispatch(rearrange({\n      id: task.id,\n      markedAsComplete: false\n    }));\n  }\n\n  function recreateOldTask(task) {\n    let newTask = { ...task\n    };\n    newTask.createdAt = new Date().toISOString();\n    newTask.isRunning = false;\n    newTask.isCompleted = false;\n    dispatch(updateTaskObject(newTask));\n  }\n\n  function labelSelectOnBlurHandler(taskId, taskLabel, updatedLabel) {\n    setLabelUnderEdit(false);\n    updatedLabel = updatedLabel === \"none\" ? null : updatedLabel;\n    dispatch(updateTaskLabel({\n      id: taskId,\n      label: updatedLabel\n    }));\n    if (taskLabel !== updatedLabel) dispatch(updateLabelCount({\n      oldLabel: taskLabel,\n      newLabel: updatedLabel\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flipped, {\n    flipId: `${task.id}`,\n    children: /*#__PURE__*/_jsxDEV(TaskCardContainer, {\n      ref: forwardRBDProvided.innerRef,\n      ...forwardRBDProvided.draggableProps,\n      ...forwardRBDProvided.dragHandleProps,\n      onMouseEnter: () => setShowDragIcon(!task.isCompleted && true),\n      onMouseLeave: () => setShowDragIcon(!task.isCompleted && false),\n      children: [/*#__PURE__*/_jsxDEV(TaskCardDragIcon, {\n        children: showDragIcon && /*#__PURE__*/_jsxDEV(DragIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskCardDiv, {\n        isFocussed: isFocussed,\n        labelColor: task.label !== null ? labels[task.label].color : null,\n        children: [isOldTask && /*#__PURE__*/_jsxDEV(OldTaskStatus, {\n          \"data-tip\": \"\",\n          \"data-for\": \"oldtask\",\n          children: [/*#__PURE__*/_jsxDEV(BsExclamationCircleFill, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n            id: \"oldtask\",\n            getContent: () => \"Task more than 24 hrs old\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TaskStatusDiv, {\n          isFocussed: isFocussed,\n          isCompleted: task.isCompleted,\n          children: [task.isCompleted ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tickmark,\n            alt: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this) : isFocussed ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: glowBulb,\n            alt: \"Focussed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: bulb,\n            alt: \"Unfocussed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this), !task.isCompleted && (timeUnderEdit ? /*#__PURE__*/_jsxDEV(TimeEditInput, {\n            type: \"number\",\n            autoFocus: true,\n            value: updatedTime,\n            onBlur: () => {\n              dispatch(updateTaskTime({\n                id: task.id,\n                updatedTime\n              }));\n              setTimeUnderEdit(false);\n            },\n            onKeyDown: submitUpdatedTime,\n            onChange: e => setUpdatedTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            onDoubleClick: () => setTimeUnderEdit(true),\n            children: formattedTimeString(task.remainingTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskDetailsDiv, {\n          children: [/*#__PURE__*/_jsxDEV(TaskContentDiv, {\n            children: taskUnderEdit ? /*#__PURE__*/_jsxDEV(TaskEditInput, {\n              type: \"text\",\n              autoFocus: true,\n              value: updatedTaskContent,\n              onBlur: () => {\n                dispatch(updateTaskContent({\n                  id: task.id,\n                  updatedTaskContent\n                }));\n                setTaskUnderEdit(false);\n              },\n              onKeyDown: submitUpdatedTaskContent,\n              onChange: e => setUpdatedTaskContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              onDoubleClick: () => setTaskUnderEdit(true),\n              children: previewTask(task.content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this), isOldTask ? /*#__PURE__*/_jsxDEV(OldTaskControllerDiv, {\n            children: [/*#__PURE__*/_jsxDEV(TaskActionButton, {\n              onClick: e => {\n                recreateOldTask(task);\n                e.stopPropagation();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TaskActionButton, {\n              onClick: e => {\n                if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                dispatch(remove(task.id));\n                if (task.label !== null) dispatch(updateLabelCount({\n                  oldLabel: task.label,\n                  newLabel: null\n                }));\n                e.stopPropagation();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(TaskControllerDiv, {\n            children: [!task.isCompleted && /*#__PURE__*/_jsxDEV(TaskActionButton, {\n              onClick: isFocussed ? () => {\n                if (task.isRunning) dispatch(toggleIsRunning({\n                  idx: focussedTaskIndex\n                }));\n                updatePageTitle(\"Fokus\");\n                dispatch(resetFocussedTask());\n                dispatch(toggleSoundscapeState(false));\n              } : () => {\n                if (focussedTaskIndex !== -1) dispatch(toggleIsRunning({\n                  idx: focussedTaskIndex,\n                  val: false\n                }));\n                dispatch(toggleSoundscapeState(false));\n                dispatch(focusOnTask(taskIndex));\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: isFocussed ? \"Unfocus\" : \"Focus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TaskActionButton, {\n              onClick: e => {\n                if (task.isCompleted) markTaskAsUndoneHandler();else markTaskAsDoneHandler();\n                e.stopPropagation();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.isCompleted ? \"Undone\" : \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TaskLabelContainer, {\n              onClick: () => setLabelUnderEdit(true),\n              labelColor: task.label !== null ? labels[task.label].color : null,\n              children: labelUnderEdit ? /*#__PURE__*/_jsxDEV(TaskLabelSelect, {\n                onBlur: labelSelectOnBlurHandler,\n                taskId: task.id,\n                taskLabel: task.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 41\n              }, this) : task.label !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"#\", task.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Add label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 33\n            }, this), !isFocussed && /*#__PURE__*/_jsxDEV(TaskDeleteButton, {\n              onClick: e => {\n                if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                dispatch(remove(task.id));\n                if (task.label !== null) dispatch(updateLabelCount({\n                  oldLabel: task.label,\n                  newLabel: null\n                }));\n                e.stopPropagation();\n              },\n              children: /*#__PURE__*/_jsxDEV(BsTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskCard, \"BzrkKYnoKrRggKtA8lhT/JWMnbw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c15 = TaskCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n\n$RefreshReg$(_c, \"TaskCardContainer\");\n$RefreshReg$(_c2, \"TaskCardDragIcon\");\n$RefreshReg$(_c3, \"TaskCardDiv\");\n$RefreshReg$(_c4, \"OldTaskStatus\");\n$RefreshReg$(_c5, \"TaskStatusDiv\");\n$RefreshReg$(_c6, \"TaskDetailsDiv\");\n$RefreshReg$(_c7, \"TaskContentDiv\");\n$RefreshReg$(_c8, \"TaskEditInput\");\n$RefreshReg$(_c9, \"TimeEditInput\");\n$RefreshReg$(_c10, \"TaskActionButton\");\n$RefreshReg$(_c11, \"TaskLabelContainer\");\n$RefreshReg$(_c12, \"TaskDeleteButton\");\n$RefreshReg$(_c13, \"TaskControllerDiv\");\n$RefreshReg$(_c14, \"OldTaskControllerDiv\");\n$RefreshReg$(_c15, \"TaskCard\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/components/TaskBoard/TaskCard.js"],"names":["React","useState","useDispatch","useSelector","remove","updateTaskContent","toggleIsCompleted","rearrange","updateTaskTime","focusOnTask","resetFocussedTask","toggleIsRunning","updateTaskLabel","updateTaskObject","updateLabelCount","toggleSoundscapeState","styled","BsTrash","Flipped","DragIcon","formattedTimeString","updatePageTitle","TaskLabelSelect","ONE_DAY","BsExclamationCircleFill","ReactTooltip","TaskCardContainer","div","TaskCardDragIcon","p","theme","primaryText","getTaskCardDivBorderLabelColor","labelColor","TaskCardDiv","backgroundSecondary","isFocussed","OldTaskStatus","TaskStatusDiv","isCompleted","TaskDetailsDiv","TaskContentDiv","TaskEditInput","textarea","TimeEditInput","input","TaskActionButton","secondaryText","TaskLabelContainer","type","TaskDeleteButton","TaskControllerDiv","OldTaskControllerDiv","previewTask","str","length","substring","TaskCard","task","taskIndex","focussedTaskGlobalKey","forwardRBDProvided","focussedTaskIndex","dispatch","taskUnderEdit","setTaskUnderEdit","updatedTaskContent","setUpdatedTaskContent","content","timeUnderEdit","setTimeUnderEdit","updatedTime","setUpdatedTime","Math","floor","time","labelUnderEdit","setLabelUnderEdit","showDragIcon","setShowDragIcon","labels","s","tasks","isOldTask","Date","createdAt","submitUpdatedTaskContent","e","key","trim","id","submitUpdatedTime","markTaskAsDoneHandler","isRunning","idx","markedAsComplete","markTaskAsUndoneHandler","globalKey","recreateOldTask","newTask","toISOString","labelSelectOnBlurHandler","taskId","taskLabel","updatedLabel","label","oldLabel","newLabel","innerRef","draggableProps","dragHandleProps","color","tickmark","glowBulb","bulb","target","value","remainingTime","stopPropagation","val"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { remove, updateTaskContent, toggleIsCompleted, rearrange, updateTaskTime } from \"../../containers/taskBoard/taskBoardSlice\";\nimport {\n    focusOnTask,\n    resetFocussedTask,\n    toggleIsRunning,\n    updateTaskLabel,\n    updateTaskObject,\n    updateLabelCount,\n    toggleSoundscapeState,\n} from \"../../containers/taskBoard/taskBoardSlice\";\nimport styled from \"styled-components\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { DragIcon } from \"./../customIcons\";\nimport { formattedTimeString , updatePageTitle} from \"../../helpers\";\nimport bulb from \"./../../images/bulb.svg\";\nimport glowBulb from \"./../../images/glowBulb.svg\";\nimport tickmark from \"./../../images/tickmark.svg\";\nimport TaskLabelSelect from \"./../../components/TaskBoard/TaskLabelSelect\";\nimport { ONE_DAY } from \"./../../helpers/constants\";\nimport { BsExclamationCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst TaskCardContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 376px; // % not working here (maybe due to animation library wrappers)\n    height: 110px;\n    margin-top: 15px;\n    cursor: default !important;\n    /* background-color: #fff4e1; */\n`;\n\nconst TaskCardDragIcon = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 5%;\n    height: 100%;\n    /* background-color: #ff09ac; */\n    svg {\n        cursor: url(\"https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur\"), default !important;\n        color: ${(p) => p.theme.primaryText};\n    }\n`;\n\nconst getTaskCardDivBorderLabelColor = (labelColor) => (labelColor !== null ? `7px solid ${labelColor}` : \"none\");\n\nconst TaskCardDiv = styled.div`\n    display: flex;\n    justify-content: space-around;\n    flex-direction: row;\n    height: 100%;\n    width: 90%;\n    border-radius: 10px;\n    position: relative;\n    border-right: ${(p) => getTaskCardDivBorderLabelColor(p.labelColor)};\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    -webkit-box-shadow: ${(p) => (p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\")};\n    box-shadow: ${(p) => (p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\")};\n`;\n\nconst OldTaskStatus = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    position: absolute;\n    top: 7px;\n    right: 7px;\n    color: #fabb18;\n    svg {\n        font-size: 0.9em;\n    }\n`;\n\nconst TaskStatusDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 15%;\n    /* background-color: #f8f8ff; */\n    position: relative;\n    color: ${(p) => p.theme.primaryText};\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.7em;\n        cursor: text;\n    }\n    img {\n        width: ${(p) => (p.isCompleted ? \"40px\" : \"60px\")};\n    }\n`;\n\nconst TaskDetailsDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    height: 100%;\n    width: 75%;\n    /* margin: 0 0 0 10px; */\n    /* background-color: #fff1fc; */\n`;\n\nconst TaskContentDiv = styled.div`\n    display: flex;\n    align-items: center;\n    height: 65%;\n    margin: 0 0 0 5px;\n    word-wrap: break-word;\n    color: ${(p) => p.theme.primaryText};\n    /* background-color: #fffcec; */\n    p {\n        font-size: 0.9em;\n        font-weight: bold;\n        min-width: 0;\n        cursor: text;\n    }\n`;\n\nconst TaskEditInput = styled.textarea`\n    resize: none;\n    height: 90%;\n    width: 100%;\n    font-size: 0.9em;\n    overflow: hidden;\n    vertical-align: center;\n    font-weight: bold;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${(p) => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 5px;\n    }\n`;\n\nconst TimeEditInput = styled.input`\n    height: 15px;\n    width: 30px;\n    margin-top: 5px;\n    text-align: center;\n    font-weight: bold;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${(p) => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 2px;\n    }\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    }\n`;\n\nconst TaskActionButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    color: ${(p) => p.theme.primaryText};\n    &:hover {\n        background-color: #fabb18;\n        p {\n            color: ${(p) => p.theme.secondaryText};\n        }\n    }\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n\nconst TaskLabelContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    &:hover {\n        background-color: ${(p) => (p.theme.type === \"l\" ? \"#f7f7fa\" : \"#121212\")};\n    }\n    p {\n        margin: 5px;\n        color: ${(p) => (p.labelColor !== null ? p.labelColor : \"#c1c1d7\")};\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n\nconst TaskDeleteButton = styled.div`\n    height: 80%;\n    cursor: pointer;\n    margin-left: auto;\n    color: #fabb18;\n    &:hover {\n        color: red;\n    }\n`;\n\nconst TaskControllerDiv = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 25%;\n    /* background-color: #fffa91; */\n    svg {\n        font-size: 0.8em;\n        margin: 5px;\n    }\n`;\n\nconst OldTaskControllerDiv = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 25%;\n`;\n\nfunction previewTask(str) {\n    if (str.length <= 60) return str;\n    else return str.substring(0, 60) + \"...\";\n}\n\nexport default function TaskCard({ task, taskIndex, focussedTaskGlobalKey, forwardRBDProvided, isFocussed, focussedTaskIndex }) {\n    const dispatch = useDispatch();\n\n    const [taskUnderEdit, setTaskUnderEdit] = useState(false);\n    const [updatedTaskContent, setUpdatedTaskContent] = useState(task.content);\n    const [timeUnderEdit, setTimeUnderEdit] = useState(false);\n    const [updatedTime, setUpdatedTime] = useState(Math.floor(task.time / 1000 / 60));\n    const [labelUnderEdit, setLabelUnderEdit] = useState(false);\n    const [showDragIcon, setShowDragIcon] = useState(false);\n\n    const labels = useSelector((s) => s.tasks.labels);\n\n    let isOldTask = false && !task.isCompleted && new Date() - new Date(task.createdAt) > ONE_DAY;\n\n    function submitUpdatedTaskContent(e) {\n        if (e.key === \"Enter\" && updatedTaskContent.trim().length >= 3) {\n            dispatch(updateTaskContent({ id: task.id, updatedTaskContent }));\n            setTaskUnderEdit(false);\n        }\n    }\n\n    function submitUpdatedTime(e) {\n        if (e.key === \"Enter\") {\n            dispatch(updateTaskTime({ id: task.id, updatedTime }));\n            setTimeUnderEdit(false);\n        }\n    }\n\n    function markTaskAsDoneHandler() {\n        if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n        if (task.isRunning) dispatch(toggleIsRunning({ idx: taskIndex }));\n        if (isFocussed) {\n            updatePageTitle(\"Fokus\");\n            dispatch(resetFocussedTask());\n        }\n        dispatch(toggleIsCompleted(task.id));\n        dispatch(rearrange({ id: task.id, markedAsComplete: true }));\n        if (taskIndex === focussedTaskIndex) dispatch(toggleSoundscapeState(false));\n    }\n\n    function markTaskAsUndoneHandler() {\n        if (focussedTaskIndex !== -1 && focussedTaskGlobalKey < task.globalKey) {\n            dispatch(focusOnTask(focussedTaskIndex + 1));\n        }\n        dispatch(toggleIsCompleted(task.id));\n        dispatch(rearrange({ id: task.id, markedAsComplete: false }));\n    }\n\n    function recreateOldTask(task) {\n        let newTask = { ...task };\n        newTask.createdAt = new Date().toISOString();\n        newTask.isRunning = false;\n        newTask.isCompleted = false;\n        dispatch(updateTaskObject(newTask));\n    }\n\n    function labelSelectOnBlurHandler(taskId, taskLabel, updatedLabel) {\n        setLabelUnderEdit(false);\n        updatedLabel = updatedLabel === \"none\" ? null : updatedLabel;\n        dispatch(updateTaskLabel({ id: taskId, label: updatedLabel }));\n        if (taskLabel !== updatedLabel) dispatch(updateLabelCount({ oldLabel: taskLabel, newLabel: updatedLabel }));\n    }\n\n    return (\n        <Flipped flipId={`${task.id}`}>\n            <TaskCardContainer\n                ref={forwardRBDProvided.innerRef}\n                {...forwardRBDProvided.draggableProps}\n                {...forwardRBDProvided.dragHandleProps}\n                onMouseEnter={() => setShowDragIcon(!task.isCompleted && true)}\n                onMouseLeave={() => setShowDragIcon(!task.isCompleted && false)}\n            >\n                <TaskCardDragIcon>{showDragIcon && <DragIcon />}</TaskCardDragIcon>\n\n                <TaskCardDiv isFocussed={isFocussed} labelColor={task.label !== null ? labels[task.label].color : null}>\n                    {isOldTask && (\n                        <OldTaskStatus data-tip=\"\" data-for=\"oldtask\">\n                            <BsExclamationCircleFill />\n                            <ReactTooltip id=\"oldtask\" getContent={() => \"Task more than 24 hrs old\"} />\n                        </OldTaskStatus>\n                    )}\n\n                    <TaskStatusDiv isFocussed={isFocussed} isCompleted={task.isCompleted}>\n                        {task.isCompleted ? (\n                            <img src={tickmark} alt=\"Done\" />\n                        ) : isFocussed ? (\n                            <img src={glowBulb} alt=\"Focussed\" />\n                        ) : (\n                            <img src={bulb} alt=\"Unfocussed\" />\n                        )}\n                        {!task.isCompleted &&\n                            (timeUnderEdit ? (\n                                <TimeEditInput\n                                    type=\"number\"\n                                    autoFocus\n                                    value={updatedTime}\n                                    onBlur={() => {\n                                        dispatch(updateTaskTime({ id: task.id, updatedTime }));\n                                        setTimeUnderEdit(false);\n                                    }}\n                                    onKeyDown={submitUpdatedTime}\n                                    onChange={(e) => setUpdatedTime(e.target.value)}\n                                />\n                            ) : (\n                                <p onDoubleClick={() => setTimeUnderEdit(true)}>{formattedTimeString(task.remainingTime)}</p>\n                            ))}\n                    </TaskStatusDiv>\n\n                    <TaskDetailsDiv>\n                        <TaskContentDiv>\n                            {taskUnderEdit ? (\n                                <TaskEditInput\n                                    type=\"text\"\n                                    autoFocus\n                                    value={updatedTaskContent}\n                                    onBlur={() => {\n                                        dispatch(updateTaskContent({ id: task.id, updatedTaskContent }));\n                                        setTaskUnderEdit(false);\n                                    }}\n                                    onKeyDown={submitUpdatedTaskContent}\n                                    onChange={(e) => setUpdatedTaskContent(e.target.value)}\n                                />\n                            ) : (\n                                <p onDoubleClick={() => setTaskUnderEdit(true)}>{previewTask(task.content)}</p>\n                            )}\n                        </TaskContentDiv>\n\n                        {isOldTask ? (\n                            <OldTaskControllerDiv>\n                                <TaskActionButton\n                                    onClick={(e) => {\n                                        recreateOldTask(task);\n                                        e.stopPropagation();\n                                    }}\n                                >\n                                    <p>Create</p>\n                                </TaskActionButton>\n                                <TaskActionButton\n                                    onClick={(e) => {\n                                        if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                                        dispatch(remove(task.id));\n                                        if (task.label !== null) dispatch(updateLabelCount({ oldLabel: task.label, newLabel: null }));\n                                        e.stopPropagation();\n                                    }}\n                                >\n                                    <p>Delete</p>\n                                </TaskActionButton>\n                            </OldTaskControllerDiv>\n                        ) : (\n                            <TaskControllerDiv>\n                                {!task.isCompleted && (\n                                    <TaskActionButton\n                                        onClick={\n                                            isFocussed\n                                                ? () => {\n                                                      if (task.isRunning) dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n                                                      updatePageTitle(\"Fokus\");\n                                                      dispatch(resetFocussedTask());\n                                                      dispatch(toggleSoundscapeState(false));\n                                                  }\n                                                : () => {\n                                                      if (focussedTaskIndex !== -1) dispatch(toggleIsRunning({ idx: focussedTaskIndex, val: false }));\n                                                      dispatch(toggleSoundscapeState(false));\n                                                      dispatch(focusOnTask(taskIndex));\n                                                  }\n                                        }\n                                    >\n                                        <p>{isFocussed ? \"Unfocus\" : \"Focus\"}</p>\n                                    </TaskActionButton>\n                                )}\n\n                                <TaskActionButton\n                                    onClick={(e) => {\n                                        if (task.isCompleted) markTaskAsUndoneHandler();\n                                        else markTaskAsDoneHandler();\n                                        e.stopPropagation();\n                                    }}\n                                >\n                                    <p>{task.isCompleted ? \"Undone\" : \"Done\"}</p>\n                                </TaskActionButton>\n\n                                <TaskLabelContainer onClick={() => setLabelUnderEdit(true)} labelColor={task.label !== null ? labels[task.label].color : null}>\n                                    {labelUnderEdit ? (\n                                        <TaskLabelSelect onBlur={labelSelectOnBlurHandler} taskId={task.id} taskLabel={task.label} />\n                                    ) : task.label !== null ? (\n                                        <p>#{task.label}</p>\n                                    ) : (\n                                        <p>Add label</p>\n                                    )}\n                                </TaskLabelContainer>\n\n                                {!isFocussed && (\n                                    <TaskDeleteButton\n                                        onClick={(e) => {\n                                            if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                                            dispatch(remove(task.id));\n                                            if (task.label !== null) dispatch(updateLabelCount({ oldLabel: task.label, newLabel: null }));\n                                            e.stopPropagation();\n                                        }}\n                                    >\n                                        <BsTrash />\n                                    </TaskDeleteButton>\n                                )}\n                            </TaskControllerDiv>\n                        )}\n                    </TaskDetailsDiv>\n                </TaskCardDiv>\n            </TaskCardContainer>\n        </Flipped>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}