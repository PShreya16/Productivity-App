{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState: {\n    darkTheme: false,\n    defaultLabel: null,\n    defaultTime: 20,\n    showTipsOnStartup: true,\n    autoCompleteZeroTimeTask: false,\n    isGridView: false\n  },\n  reducers: {\n    toggleDarkTheme(settings, {\n      payload\n    }) {\n      if (payload !== undefined) settings.darkTheme = payload;else settings.darkTheme = settings.darkTheme ? false : true;\n    },\n\n    toggleAutoCompleteZeroTimeTask(settings, {\n      payload\n    }) {\n      if (payload !== undefined) settings.autoCompleteZeroTimeTask = payload;else settings.autoCompleteZeroTimeTask = settings.autoCompleteZeroTimeTask ? false : true;\n    },\n\n    updateDefaultTime(settings, {\n      payload\n    }) {\n      settings.defaultTime = payload;\n    },\n\n    updateDefaultLabel(settings, {\n      payload\n    }) {\n      settings.defaultLabel = payload;\n    },\n\n    setGridView: (settings, {\n      payload\n    }) => {\n      settings.isGridView = payload;\n    }\n  }\n});\nexport const {\n  toggleDarkTheme,\n  toggleAutoCompleteZeroTimeTask,\n  updateDefaultTime,\n  updateDefaultLabel,\n  setGridView\n} = settingsSlice.actions;\nexport default settingsSlice.reducer;","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/containers/settings/settingsSlice.js"],"names":["createSlice","settingsSlice","name","initialState","darkTheme","defaultLabel","defaultTime","showTipsOnStartup","autoCompleteZeroTimeTask","isGridView","reducers","toggleDarkTheme","settings","payload","undefined","toggleAutoCompleteZeroTimeTask","updateDefaultTime","updateDefaultLabel","setGridView","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC;AACrCE,EAAAA,IAAI,EAAE,UAD+B;AAErCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,KADD;AAEVC,IAAAA,YAAY,EAAE,IAFJ;AAGVC,IAAAA,WAAW,EAAE,EAHH;AAIVC,IAAAA,iBAAiB,EAAE,IAJT;AAKVC,IAAAA,wBAAwB,EAAE,KALhB;AAMVC,IAAAA,UAAU,EAAE;AANF,GAFuB;AAUrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,eAAe,CAACC,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,EAAwB;AACnC,UAAIA,OAAO,KAAKC,SAAhB,EAA2BF,QAAQ,CAACR,SAAT,GAAqBS,OAArB,CAA3B,KACKD,QAAQ,CAACR,SAAT,GAAqBQ,QAAQ,CAACR,SAAT,GAAqB,KAArB,GAA6B,IAAlD;AACR,KAJK;;AAKNW,IAAAA,8BAA8B,CAACH,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,EAAwB;AAClD,UAAIA,OAAO,KAAKC,SAAhB,EAA2BF,QAAQ,CAACJ,wBAAT,GAAoCK,OAApC,CAA3B,KACKD,QAAQ,CAACJ,wBAAT,GAAoCI,QAAQ,CAACJ,wBAAT,GAAoC,KAApC,GAA4C,IAAhF;AACR,KARK;;AASNQ,IAAAA,iBAAiB,CAACJ,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,EAAwB;AACrCD,MAAAA,QAAQ,CAACN,WAAT,GAAuBO,OAAvB;AACH,KAXK;;AAYNI,IAAAA,kBAAkB,CAACL,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,EAAwB;AACtCD,MAAAA,QAAQ,CAACP,YAAT,GAAwBQ,OAAxB;AACH,KAdK;;AAeNK,IAAAA,WAAW,EAAE,CAACN,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAA2B;AACpCD,MAAAA,QAAQ,CAACH,UAAT,GAAsBI,OAAtB;AACH;AAjBK;AAV2B,CAAD,CAAjC;AA+BP,OAAO,MAAM;AAAEF,EAAAA,eAAF;AAAmBI,EAAAA,8BAAnB;AAAmDC,EAAAA,iBAAnD;AAAsEC,EAAAA,kBAAtE;AAA0FC,EAAAA;AAA1F,IAA0GjB,aAAa,CAACkB,OAA9H;AAEP,eAAelB,aAAa,CAACmB,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const settingsSlice = createSlice({\n    name: \"settings\",\n    initialState: {\n        darkTheme: false,\n        defaultLabel: null,\n        defaultTime: 20,\n        showTipsOnStartup: true,\n        autoCompleteZeroTimeTask: false,\n        isGridView: false,\n    },\n    reducers: {\n        toggleDarkTheme(settings, { payload }) {\n            if (payload !== undefined) settings.darkTheme = payload;\n            else settings.darkTheme = settings.darkTheme ? false : true;\n        },\n        toggleAutoCompleteZeroTimeTask(settings, { payload }) {\n            if (payload !== undefined) settings.autoCompleteZeroTimeTask = payload;\n            else settings.autoCompleteZeroTimeTask = settings.autoCompleteZeroTimeTask ? false : true;\n        },\n        updateDefaultTime(settings, { payload }) {\n            settings.defaultTime = payload;\n        },\n        updateDefaultLabel(settings, { payload }) {\n            settings.defaultLabel = payload;\n        },\n        setGridView: (settings, { payload }) => {\n            settings.isGridView = payload;\n        },\n    },\n});\n\nexport const { toggleDarkTheme, toggleAutoCompleteZeroTimeTask, updateDefaultTime, updateDefaultLabel, setGridView } = settingsSlice.actions;\n\nexport default settingsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}