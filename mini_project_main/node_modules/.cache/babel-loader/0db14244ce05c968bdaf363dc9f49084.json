{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\fokus2\\\\mini_project_main\\\\src\\\\containers\\\\settings\\\\DefaultTaskTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { updateDefaultTime } from \"./settingsSlice\";\nimport { InputDiv } from \"./index\";\nconst DefaultTaskTimeBox = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 80%;\n    height: 70px;\n    background-color: ${p => p.theme.backgroundSecondary};\n    p {\n        display: inline-block;\n        margin: 0 5px 0 0;\n    }\n`;\n_c = DefaultTaskTimeBox;\nconst TimeInput = styled.input`\n    width: 50px;\n    text-align: center;\n    outline: none;\n    border: 0;\n    background-color: ${p => p.theme.backgroundSecondary};\n    border-bottom: 2px ${p => p.theme.primaryText} solid;\n    color: ${p => p.theme.primaryText};\n    font-size: 1em;\n    font-weight: bold;\n    /* &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    } */\n`;\n_c2 = TimeInput;\nexport function DefaultTaskTime() {\n  _s();\n\n  const defaultTime = useSelector(s => s.settings.defaultTime);\n  const [updatedTime, setUpdatedTime] = useState(defaultTime);\n  const dispatch = useDispatch();\n\n  function onBlur(updatedTime) {\n    updatedTime = updatedTime === \"\" ? 20 : updatedTime;\n    updatedTime = updatedTime === \"0\" ? 20 : updatedTime;\n    dispatch(updateDefaultTime(updatedTime));\n  }\n\n  return /*#__PURE__*/_jsxDEV(DefaultTaskTimeBox, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Default Task Time \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"0.8em\"\n        },\n        children: \"(1-120 mins)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputDiv, {\n      children: /*#__PURE__*/_jsxDEV(TimeInput, {\n        type: \"number\",\n        min: 1,\n        max: 120,\n        onBlur: () => onBlur(updatedTime),\n        value: updatedTime,\n        onChange: e => {\n          if (e.target.value >= 0 && e.target.value <= 120) setUpdatedTime(e.target.value);\n        },\n        onKeyDown: e => e.key === \"Enter\" ? onBlur(updatedTime) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DefaultTaskTime, \"DGv52d4yXDsQD4Ca/ByGDE1ssOc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c3 = DefaultTaskTime;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DefaultTaskTimeBox\");\n$RefreshReg$(_c2, \"TimeInput\");\n$RefreshReg$(_c3, \"DefaultTaskTime\");","map":{"version":3,"sources":["C:/fokus2/mini_project_main/src/containers/settings/DefaultTaskTime.js"],"names":["React","useState","useSelector","useDispatch","styled","updateDefaultTime","InputDiv","DefaultTaskTimeBox","div","p","theme","backgroundSecondary","TimeInput","input","primaryText","DefaultTaskTime","defaultTime","s","settings","updatedTime","setUpdatedTime","dispatch","onBlur","fontSize","e","target","value","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,MAAMC,kBAAkB,GAAGH,MAAM,CAACI,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA,wBAAyBC,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQC,mBAAoB;AAC3D;AACA;AACA;AACA;AACA,CAXA;KAAMJ,kB;AAaN,MAAMK,SAAS,GAAGR,MAAM,CAACS,KAAM;AAC/B;AACA;AACA;AACA;AACA,wBAAyBJ,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQC,mBAAoB;AAC3D,yBAA0BF,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQI,WAAY;AACpD,aAAcL,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQI,WAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;MAAMF,S;AAmBN,OAAO,SAASG,eAAT,GAA2B;AAAA;;AAE9B,QAAMC,WAAW,GAAGd,WAAW,CAAEe,CAAD,IAAOA,CAAC,CAACC,QAAF,CAAWF,WAAnB,CAA/B;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAACe,WAAD,CAA9C;AACA,QAAMK,QAAQ,GAAGlB,WAAW,EAA5B;;AAEA,WAASmB,MAAT,CAAgBH,WAAhB,EAA6B;AACzBA,IAAAA,WAAW,GAAGA,WAAW,KAAK,EAAhB,GAAqB,EAArB,GAA0BA,WAAxC;AACAA,IAAAA,WAAW,GAAGA,WAAW,KAAK,GAAhB,GAAsB,EAAtB,GAA2BA,WAAzC;AACAE,IAAAA,QAAQ,CAAChB,iBAAiB,CAACc,WAAD,CAAlB,CAAR;AACH;;AAED,sBACI,QAAC,kBAAD;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,QAAD;AAAA,6BACI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,GAAG,EAAE,CAFT;AAGI,QAAA,GAAG,EAAE,GAHT;AAII,QAAA,MAAM,EAAE,MAAMD,MAAM,CAACH,WAAD,CAJxB;AAKI,QAAA,KAAK,EAAEA,WALX;AAMI,QAAA,QAAQ,EAAGK,CAAD,IAAO;AACb,cAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,CAAlB,IAAuBF,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,GAA7C,EAAkDN,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACrD,SARL;AASI,QAAA,SAAS,EAAGF,CAAD,IAAQA,CAAC,CAACG,GAAF,KAAU,OAAV,GAAoBL,MAAM,CAACH,WAAD,CAA1B,GAA0C;AATjE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAlCeJ,e;UAEQb,W,EAEHC,W;;;MAJLY,e","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { updateDefaultTime } from \"./settingsSlice\";\nimport { InputDiv } from \"./index\";\n\nconst DefaultTaskTimeBox = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 80%;\n    height: 70px;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    p {\n        display: inline-block;\n        margin: 0 5px 0 0;\n    }\n`;\n\nconst TimeInput = styled.input`\n    width: 50px;\n    text-align: center;\n    outline: none;\n    border: 0;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    border-bottom: 2px ${(p) => p.theme.primaryText} solid;\n    color: ${(p) => p.theme.primaryText};\n    font-size: 1em;\n    font-weight: bold;\n    /* &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    } */\n`;\n\nexport function DefaultTaskTime() {\n\n    const defaultTime = useSelector((s) => s.settings.defaultTime);\n    const [updatedTime, setUpdatedTime] = useState(defaultTime);\n    const dispatch = useDispatch();\n\n    function onBlur(updatedTime) {\n        updatedTime = updatedTime === \"\" ? 20 : updatedTime;\n        updatedTime = updatedTime === \"0\" ? 20 : updatedTime;\n        dispatch(updateDefaultTime(updatedTime));\n    }\n\n    return (\n        <DefaultTaskTimeBox>\n            <div>\n                <p>Default Task Time </p>\n                <span style={{ fontSize: \"0.8em\" }}>(1-120 mins)</span>\n            </div>\n\n            <InputDiv>\n                <TimeInput\n                    type=\"number\"\n                    min={1}\n                    max={120}\n                    onBlur={() => onBlur(updatedTime)}\n                    value={updatedTime}\n                    onChange={(e) => {\n                        if (e.target.value >= 0 && e.target.value <= 120) setUpdatedTime(e.target.value);\n                    }}\n                    onKeyDown={(e) => (e.key === \"Enter\" ? onBlur(updatedTime) : null)}\n                />\n            </InputDiv>\n        </DefaultTaskTimeBox>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}