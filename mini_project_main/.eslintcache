[{"C:\\fokus2\\mini_project_main\\src\\index.js":"1","C:\\fokus2\\mini_project_main\\src\\store\\index.js":"2","C:\\fokus2\\mini_project_main\\src\\containers\\RegisterPage.js":"3","C:\\fokus2\\mini_project_main\\src\\helpers\\themeStyles.js":"4","C:\\fokus2\\mini_project_main\\src\\containers\\login\\LoginPage.js":"5","C:\\fokus2\\mini_project_main\\src\\containers\\settings\\settingsSlice.js":"6","C:\\fokus2\\mini_project_main\\src\\containers\\notes\\notesSlice.js":"7","C:\\fokus2\\mini_project_main\\src\\containers\\settings\\index.js":"8","C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\NoTasks.js":"9","C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\Divider.js":"10","C:\\fokus2\\mini_project_main\\src\\helpers\\index.js":"11","C:\\fokus2\\mini_project_main\\src\\containers\\settings\\DefaultTaskLabel.js":"12","C:\\fokus2\\mini_project_main\\src\\containers\\settings\\AutoMarkDone.js":"13","C:\\fokus2\\mini_project_main\\src\\containers\\menu\\Menu.js":"14","C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\TaskFeedback.js":"15","C:\\fokus2\\mini_project_main\\src\\components\\notes\\NewNoteButton.js":"16","C:\\fokus2\\mini_project_main\\src\\components\\dashBoard\\DayDate.js":"17","C:\\fokus2\\mini_project_main\\src\\components\\customIcons\\index.js":"18","C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\LabelPie.js":"19","C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\ProgressRings.js":"20","C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\TaskProgressCard.js":"21","C:\\fokus2\\mini_project_main\\src\\components\\MusicBox\\Soundscapes.js":"22","C:\\fokus2\\mini_project_main\\src\\components\\MusicBox\\MusicVolumeControl.js":"23","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\index.js":"24","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\store\\index.js":"25","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\RegisterPage.js":"26","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\LandingPage.js":"27","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\themeStyles.js":"28","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\settingsSlice.js":"29","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\index.js":"30","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\NoTasks.js":"31","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskInput.js":"32","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\AutoMarkDone.js":"33","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\NotesViewToggle.js":"34","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\menu\\Menu.js":"35","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskLabelSelect.js":"36","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NewNoteButton.js":"37","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\focusBoard\\FocusBoard.js":"38","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\customIcons\\index.js":"39","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\FocusBoard\\FocussedTask.js":"40","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\TimeProgressCard.js":"41","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\MusicVolumeControl.js":"42","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\hooks\\useTimer.js":"43","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\DashboardHero.js":"44","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\Navbar\\Navbar.js":"45","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\taskBoard\\TaskBoard.js":"46","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\login\\LoginPage.js":"47","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\store\\localStorageUtils.js":"48","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\taskBoard\\taskBoardSlice.js":"49","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\index.js":"50","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\Divider.js":"51","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\constants.js":"52","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\DefaultTaskTime.js":"53","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\DashboardMain.js":"54","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NotesPreview.js":"55","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NoteCard.js":"56","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\dashBoard\\DayDate.js":"57","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\FocusBoard\\EmptyFocusBox.js":"58","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\ProgressRings.js":"59","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\App.js":"60","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\mobileView\\index.js":"61","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\index.js":"62","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskCard.js":"63","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\quotes.js":"64","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\EmptyLabelPie.js":"65","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\DefaultTaskLabel.js":"66","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\notes\\index.js":"67","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\fokusUsageTips.js":"68","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\musicUtils.js":"69"},{"size":725,"mtime":1667124166000,"results":"70","hashOfConfig":"71"},{"size":784,"mtime":1667124166000,"results":"72","hashOfConfig":"71"},{"size":4824,"mtime":1667124166000,"results":"73","hashOfConfig":"71"},{"size":620,"mtime":1667124166000,"results":"74","hashOfConfig":"71"},{"size":5418,"mtime":1667124166000,"results":"75","hashOfConfig":"71"},{"size":1312,"mtime":1667124166000,"results":"76","hashOfConfig":"71"},{"size":1416,"mtime":1667124166000,"results":"77","hashOfConfig":"71"},{"size":2090,"mtime":1667124166000,"results":"78","hashOfConfig":"71"},{"size":687,"mtime":1667124166000,"results":"79","hashOfConfig":"71"},{"size":2654,"mtime":1667124166000,"results":"80","hashOfConfig":"71"},{"size":2950,"mtime":1667124166000,"results":"81","hashOfConfig":"71"},{"size":2205,"mtime":1667124166000,"results":"82","hashOfConfig":"71"},{"size":1025,"mtime":1667124166000,"results":"83","hashOfConfig":"71"},{"size":4481,"mtime":1667124166000,"results":"84","hashOfConfig":"71"},{"size":4201,"mtime":1667124166000,"results":"85","hashOfConfig":"71"},{"size":1772,"mtime":1667124166000,"results":"86","hashOfConfig":"71"},{"size":1423,"mtime":1667124166000,"results":"87","hashOfConfig":"71"},{"size":2280,"mtime":1667124166000,"results":"88","hashOfConfig":"71"},{"size":2823,"mtime":1667124166000,"results":"89","hashOfConfig":"71"},{"size":4224,"mtime":1667124166000,"results":"90","hashOfConfig":"71"},{"size":2050,"mtime":1667124166000,"results":"91","hashOfConfig":"71"},{"size":4547,"mtime":1667124166000,"results":"92","hashOfConfig":"71"},{"size":1577,"mtime":1667124166000,"results":"93","hashOfConfig":"71"},{"size":749,"mtime":1667421638045,"results":"94","hashOfConfig":"95"},{"size":810,"mtime":1667325383593,"results":"96","hashOfConfig":"95"},{"size":4983,"mtime":1667325382783,"results":"97","hashOfConfig":"95"},{"size":1139,"mtime":1667468963337,"results":"98","hashOfConfig":"95"},{"size":651,"mtime":1667325383121,"results":"99","hashOfConfig":"95"},{"size":1348,"mtime":1667325383080,"results":"100","hashOfConfig":"95"},{"size":2171,"mtime":1667325383075,"results":"101","hashOfConfig":"95"},{"size":715,"mtime":1667325382722,"results":"102","hashOfConfig":"95"},{"size":7123,"mtime":1667325382731,"results":"103","hashOfConfig":"95"},{"size":1057,"mtime":1667325383054,"results":"104","hashOfConfig":"95"},{"size":1799,"mtime":1667325383072,"results":"105","hashOfConfig":"95"},{"size":4659,"mtime":1667398382969,"results":"106","hashOfConfig":"95"},{"size":1410,"mtime":1667325382734,"results":"107","hashOfConfig":"95"},{"size":1829,"mtime":1667325382745,"results":"108","hashOfConfig":"95"},{"size":2151,"mtime":1667325382809,"results":"109","hashOfConfig":"95"},{"size":2339,"mtime":1667325382737,"results":"110","hashOfConfig":"95"},{"size":10608,"mtime":1667325382694,"results":"111","hashOfConfig":"95"},{"size":3195,"mtime":1667325382702,"results":"112","hashOfConfig":"95"},{"size":1627,"mtime":1667325382704,"results":"113","hashOfConfig":"95"},{"size":1581,"mtime":1667325383124,"results":"114","hashOfConfig":"95"},{"size":1947,"mtime":1667423479564,"results":"115","hashOfConfig":"95"},{"size":236,"mtime":1667401208698,"results":"116","hashOfConfig":"95"},{"size":6614,"mtime":1667325383085,"results":"117","hashOfConfig":"95"},{"size":6286,"mtime":1667469302111,"results":"118","hashOfConfig":"95"},{"size":2307,"mtime":1667325383597,"results":"119","hashOfConfig":"95"},{"size":15006,"mtime":1667325383088,"results":"120","hashOfConfig":"95"},{"size":844,"mtime":1667325382803,"results":"121","hashOfConfig":"95"},{"size":2730,"mtime":1667325382718,"results":"122","hashOfConfig":"95"},{"size":115,"mtime":1667325383103,"results":"123","hashOfConfig":"95"},{"size":2289,"mtime":1667325383071,"results":"124","hashOfConfig":"95"},{"size":540,"mtime":1667325382801,"results":"125","hashOfConfig":"95"},{"size":7665,"mtime":1667325382754,"results":"126","hashOfConfig":"95"},{"size":2306,"mtime":1667325382747,"results":"127","hashOfConfig":"95"},{"size":1484,"mtime":1667325382740,"results":"128","hashOfConfig":"95"},{"size":6428,"mtime":1667325382692,"results":"129","hashOfConfig":"95"},{"size":4356,"mtime":1667325382699,"results":"130","hashOfConfig":"95"},{"size":3264,"mtime":1667421631759,"results":"131","hashOfConfig":"95"},{"size":999,"mtime":1667325382829,"results":"132","hashOfConfig":"95"},{"size":3069,"mtime":1667325383115,"results":"133","hashOfConfig":"95"},{"size":17625,"mtime":1667325382726,"results":"134","hashOfConfig":"95"},{"size":20730,"mtime":1667325383118,"results":"135","hashOfConfig":"95"},{"size":713,"mtime":1667325382695,"results":"136","hashOfConfig":"95"},{"size":2274,"mtime":1667325383068,"results":"137","hashOfConfig":"95"},{"size":750,"mtime":1667325382833,"results":"138","hashOfConfig":"95"},{"size":2807,"mtime":1667325383109,"results":"139","hashOfConfig":"95"},{"size":1338,"mtime":1667325382714,"results":"140","hashOfConfig":"95"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q880hz",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sni1sc",{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"206"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"210"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"210"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"191"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"206"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\fokus2\\mini_project_main\\src\\index.js",[],"C:\\fokus2\\mini_project_main\\src\\store\\index.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\RegisterPage.js",[],"C:\\fokus2\\mini_project_main\\src\\helpers\\themeStyles.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\login\\LoginPage.js",["292"],"C:\\fokus2\\mini_project_main\\src\\containers\\settings\\settingsSlice.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\notes\\notesSlice.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\settings\\index.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\NoTasks.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\Divider.js",[],"C:\\fokus2\\mini_project_main\\src\\helpers\\index.js",["293","294","295","296","297","298","299","300","301","302","303","304"],"C:\\fokus2\\mini_project_main\\src\\containers\\settings\\DefaultTaskLabel.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\settings\\AutoMarkDone.js",[],"C:\\fokus2\\mini_project_main\\src\\containers\\menu\\Menu.js",["305","306","307","308","309"],"C:\\fokus2\\mini_project_main\\src\\components\\TaskBoard\\TaskFeedback.js",["310"],"C:\\fokus2\\mini_project_main\\src\\components\\notes\\NewNoteButton.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\dashBoard\\DayDate.js",["311"],"C:\\fokus2\\mini_project_main\\src\\components\\customIcons\\index.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\LabelPie.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\ProgressRings.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\MiscBoard\\TaskProgressCard.js",[],"C:\\fokus2\\mini_project_main\\src\\components\\MusicBox\\Soundscapes.js",["312"],"C:\\fokus2\\mini_project_main\\src\\components\\MusicBox\\MusicVolumeControl.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\index.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\store\\index.js",[],["313","314"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\RegisterPage.js",[],["315","316"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\LandingPage.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\themeStyles.js",[],["317","318"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\settingsSlice.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\index.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\NoTasks.js",[],["319","320"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskInput.js",["321"],"import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { create, incrementGlobalKey, focusOnTask, updateLabelCount } from \"./../../containers/taskBoard/taskBoardSlice\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillPlusCircle, AiFillClockCircle } from \"react-icons/ai\";\r\nimport { TaskFeedback } from \"./TaskFeedback\";\r\nimport { debounce } from \"../../helpers\";\r\n\r\nconst TaskInputContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 20px 0 10px 0;\r\n    width: 90%;\r\n    max-width: 396px;\r\n    border-radius: 10px;\r\n    background-color: ${(p) => p.theme.backgroundSecondary};\r\n    height: 50px;\r\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\r\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.3);\r\n`;\r\n\r\nconst TaskContentInputDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 90%;\r\n    width: 70%;\r\n    margin-left: 10px;\r\n    svg {\r\n        font-size: 1.3em;\r\n        margin-right: 5px;\r\n        color: #fabb18;\r\n    }\r\n`;\r\n\r\nconst TaskContentInputField = styled.input`\r\n    height: 100%;\r\n    width: 90%;\r\n    font-size: 0.9em;\r\n    background-color: ${(p) => p.theme.backgroundSecondary};\r\n    color: ${(p) => p.theme.primaryText};\r\n    border: 0;\r\n    outline: none;\r\n    font-weight: bold;\r\n    &::placeholder {\r\n        color: #c1c1d7;\r\n    }\r\n`;\r\n\r\nconst TaskTimeInputDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 90%;\r\n    width: 25%;\r\n    color: #c1c1d7;\r\n    span {\r\n        font-size: 0.7em;\r\n        font-weight: bold;\r\n    }\r\n    svg {\r\n        font-size: 1.2em;\r\n        color: #fabb18;\r\n    }\r\n`;\r\n\r\nconst TaskTimeInputField = styled.input`\r\n    height: 100%;\r\n    width: 30%;\r\n    font-size: 0.9em;\r\n    text-align: center;\r\n    background-color: ${(p) => p.theme.backgroundSecondary};\r\n    color: ${(p) => p.theme.primaryText};\r\n    border: 0;\r\n    outline: none;\r\n    font-weight: bold;\r\n    &::placeholder {\r\n        color: #c1c1d7;\r\n    }\r\n    &::-webkit-inner-spin-button,\r\n    &::-webkit-outer-spin-button {\r\n        -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n        appearance: none;\r\n        margin: 0;\r\n    }\r\n        input[type=\"number\"] { \r\n        -moz-appearance: textfield;   \r\n    }\r\n`;\r\n\r\nexport default function TaskInput() {\r\n\r\n    const defaultTime = useSelector((s) => s.settings.defaultTime);\r\n    const defaultLabel = useSelector((s) => s.settings.defaultLabel);\r\n\r\n    const [task, setTask] = useState(\"\");\r\n    const [time, setTime] = useState(defaultTime);\r\n\r\n    const [generateFeedbackForTask, setGenerateFeedbackForTask] = useState(undefined);\r\n    const [generateFeedbackForTime, setGenerateFeedbackForTime] = useState(undefined);\r\n    const [isInputValid,setInputValid] = useState(false);\r\n\r\n    let taskContentInputRef, taskTimeInputRef;\r\n    const meta = useSelector((s) => s.tasks.meta);\r\n    const labels = useSelector((s) => s.tasks.labels);\r\n    const dispatch = useDispatch();\r\n\r\n    function submitTask(e) {\r\n        if (e.key === \"Enter\" && task.trim().length >= 1 && isInputValid) {\r\n            let temp = task.trim().split(\" \");\r\n            // add a max time limit\r\n            let taskTime = time;\r\n            let label = defaultLabel;\r\n            if (temp.length !== 1) {\r\n                if (!isNaN(parseInt(temp[temp.length - 1]))) {\r\n                    taskTime = parseInt(temp.pop());\r\n                } else if (temp[temp.length - 1][0] === \"#\" && temp[temp.length - 1].length > 1 && \"wpfmeWPFME\".includes(temp[temp.length - 1][1])) {\r\n                    let userLabel = temp[temp.length - 1].substring(1).toLowerCase();\r\n                    let found = false;\r\n                    for (let validLabel in labels) {\r\n                        found = validLabel.includes(userLabel);\r\n                        console.log(userLabel, validLabel);\r\n                        if (found) {\r\n                            label = validLabel;\r\n                            temp.pop();\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            temp = temp.join(\" \");\r\n            let newTask = {\r\n                id: Math.floor(Math.random() * 10000),\r\n                globalKey: meta.globalKey,\r\n                content: temp,\r\n                time: taskTime,\r\n                remainingTime: taskTime,\r\n                isRunning: false,\r\n                isCompleted: false,\r\n                createdAt: new Date().toISOString(),\r\n                label: label,\r\n            };\r\n            if (meta.focussedTaskIndex !== -1) dispatch(focusOnTask(meta.focussedTaskIndex + 1));\r\n            dispatch(create(newTask));\r\n            dispatch(incrementGlobalKey());\r\n            if (label !== null) dispatch(updateLabelCount({ oldLabel: null, newLabel: label }));\r\n            setTask(\"\");\r\n            setTime(defaultTime);\r\n            taskContentInputRef.value = \"\";\r\n            taskTimeInputRef.value = \"\";\r\n            taskContentInputRef.focus();\r\n        }\r\n    }\r\n\r\n    const debouncedGenerateInputFeedback = useCallback(\r\n        debounce((task, time) => {\r\n            if (task !== undefined) setGenerateFeedbackForTask(task);\r\n            if (time !== undefined) setGenerateFeedbackForTime(time);\r\n        }, 150),\r\n        []\r\n    );\r\n\r\n    function onTaskInputChangeHandler(task) {\r\n        setTask(task);\r\n        debouncedGenerateInputFeedback(task, undefined);\r\n    }\r\n\r\n    function onTimeInputChangeHandler(time) {\r\n        setTime(time);\r\n        debouncedGenerateInputFeedback(undefined, time);\r\n    }\r\n\r\n    // improve logic - both onKeyDown and onChange executing - combining will be better.\r\n    return (\r\n        <>\r\n            <TaskInputContainer>\r\n                <TaskContentInputDiv>\r\n                    <AiFillPlusCircle onClick={() => taskContentInputRef.focus()} />\r\n                    <TaskContentInputField\r\n                        type=\"text\"\r\n                        placeholder=\"i have to focus on ...\"\r\n                        ref={(el) => (taskContentInputRef = el)}\r\n                        onChange={(e) => onTaskInputChangeHandler(e.target.value)}\r\n                        onKeyDown={submitTask}\r\n                    />\r\n                </TaskContentInputDiv>\r\n                <TaskTimeInputDiv>\r\n                    <AiFillClockCircle onClick={() => taskTimeInputRef.focus()} />\r\n                    <TaskTimeInputField\r\n                        type=\"number\"\r\n                        placeholder={defaultTime}\r\n                        ref={(el) => (taskTimeInputRef = el)}\r\n                        onChange={(e) => onTimeInputChangeHandler(e.target.value)}\r\n                        onKeyDown={submitTask}\r\n                    />\r\n                    <span>mins</span>\r\n                </TaskTimeInputDiv>\r\n            </TaskInputContainer>\r\n            <TaskFeedback task={generateFeedbackForTask} time={generateFeedbackForTime} setInputValid={setInputValid}/>\r\n        </>\r\n    );\r\n}\r\n",["322","323"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\AutoMarkDone.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\NotesViewToggle.js",["324"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { setGridView } from \"./settingsSlice\";\r\nimport { FaThList } from \"react-icons/fa\";\r\nimport { BsFillGrid3X3GapFill } from \"react-icons/bs\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst NotesViewDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 80%;\r\n    height: 70px;\r\n    background-color: ${(p) => p.theme.backgroundSecondary};\r\n    p {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const Options = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 120px;\r\n    svg{\r\n        cursor: pointer;\r\n        margin:3px;\r\n        font-size: 1.2em;\r\n    }\r\n    #list-view-opt {\r\n        color: ${(p) => (p.isGridView ? p.theme.primaryText : \"#fabb18\")};\r\n    }\r\n    #grid-view-opt {\r\n        color: ${(p) => (p.isGridView ? \"#fabb18\" : p.theme.primaryText)};\r\n    }\r\n`;\r\n\r\nexport function NotesViewToggle() {\r\n    const isGridView = useSelector((s) => s.settings.isGridView);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <NotesViewDiv>\r\n            <p>Notes View Layout</p>\r\n            <Options isGridView={isGridView}>\r\n                <FaThList id=\"list-view-opt\" data-for=\"list-view\" data-tip=\"\" onClick={() => {console.log('fd');dispatch(setGridView(false))}} />\r\n                <BsFillGrid3X3GapFill id=\"grid-view-opt\" data-for=\"grid-view\" data-tip=\"\" onClick={() => dispatch(setGridView(true))} />\r\n                <ReactTooltip id=\"list-view\" getContent={() => \"List View\"} />\r\n                <ReactTooltip id=\"grid-view\" getContent={() => \"Grid View\"} />\r\n            </Options>\r\n        </NotesViewDiv>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\menu\\Menu.js",["325","326","327","328","329","330"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MdDashboard, MdSettings } from \"react-icons/md\";\r\nimport { IoMdAnalytics } from \"react-icons/io\";\r\nimport { BiExclude, BiNotepad } from \"react-icons/bi\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport logo from \"./../../images/DEF.png\";\r\n// import namedLogoLight from \"./../../images/abcd.png\";\r\nimport \"./Menu.css\"\r\n\r\nconst MenuContainer = styled.div`\r\n    width: 10%;\r\n    max-width: 200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background-color: #020202;\r\n    border-radius: 0 10px 10px 0;\r\n    border-left: 15px solid #fabb18;\r\n    position: relative;\r\n`;\r\n\r\nconst AppLogoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    width: 100%;\r\n    top: 25px;\r\n    left: 5px;\r\n        img {\r\n        width: 50%;\r\n    }\r\n    /* background-color:pink; */\r\n`;\r\n\r\nconst AppTextLogoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    width: 100%;\r\n    bottom: 15px;\r\n    margin-right: 20px;\r\n\r\n    img {\r\n        width: 75%;\r\n    }\r\n    /* background-color:purple; */\r\n`;\r\n\r\nconst activeClassName = \"nav-item-active\";\r\nconst MenuOptions = styled(NavLink).attrs({ activeClassName })`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 10px 0;\r\n    border-radius: 0 5px 5px 0;\r\n    background-color: #020202;\r\n    svg {\r\n        font-size: 1.8em;\r\n        color: #fff;\r\n        margin: 10px 0;\r\n    }\r\n    &.${activeClassName} {\r\n        svg {\r\n            color: #fabb18;\r\n        }\r\n    }\r\n    width: 100%;\r\n    transition: width 0.2s;\r\n    &:hover {\r\n        svg {\r\n            color: #fff;\r\n        }\r\n        width: 125%;\r\n        background-color: #fabb18;\r\n    }\r\n`;\r\n\r\nconst DummyMenuOptions = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 7px 0;\r\n    border-radius: 0 5px 5px 0;\r\n    background-color: #020202;\r\n    svg {\r\n        font-size: 1.8em;\r\n        color: #fff;\r\n        margin: 10px 0;\r\n    }\r\n    width: 100%;\r\n    transition: width 0.2s;\r\n    &:hover {\r\n        svg {\r\n            color: #fff;\r\n        }\r\n        width: 125%;\r\n        background-color: #fabb18;\r\n    }\r\n`;\r\n\r\nexport default function Menu() {\r\n    //     function dropdown(){\r\n    //         return(\r\n    \r\n    //         )\r\n\r\n    //     }\r\n    return (\r\n        <MenuContainer>\r\n            <AppLogoContainer>\r\n                <div class=\"dropdown\">\r\n                    <img src={logo} alt=\"logo\" className=\"mylogo\" style={{ \"width\": \"50px\", \"height\": \"50px \" }} />\r\n                    <a class=\"btn btn-secondary dropdown-toggle mybtn\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                    </a>\r\n\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n                        <a class=\"dropdown-item\" href=\"#\">Logout</a>\r\n                        <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                        <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                    </div>\r\n                </div>\r\n            </AppLogoContainer>\r\n            <MenuOptions exact to=\"/dashboard\">\r\n                <MdDashboard data-tip=\"\" data-for=\"dashboard\" />\r\n                <ReactTooltip id=\"dashboard\" getContent={() => \"Dashboard\"} />\r\n            </MenuOptions>\r\n\r\n            <MenuOptions exact to=\"/notes\">\r\n                <BiNotepad data-tip=\"\" data-for=\"notes\" />\r\n                <ReactTooltip id=\"notes\" getContent={() => \"Notes\"} />\r\n            </MenuOptions>\r\n\r\n            <MenuOptions exact to=\"/pomodoro\">\r\n                <BiNotepad data-tip=\"\" data-for=\"/PomodoroFile\" />\r\n                <ReactTooltip id=\"App2\" getContent={() => \"App2\"} />\r\n            </MenuOptions>\r\n\r\n            <DummyMenuOptions>\r\n                <BiExclude data-tip=\"\" data-for=\"analytics\" />\r\n                <ReactTooltip id=\"analytics\" getContent={() => \"Coming Soon\"} />\r\n            </DummyMenuOptions>\r\n\r\n            <MenuOptions exact to=\"/settings\">\r\n                <MdSettings data-tip=\"\" data-for=\"settings\" />\r\n                <ReactTooltip id=\"settings\" getContent={() => \"Settings\"} />\r\n            </MenuOptions>\r\n\r\n            {/* <AppTextLogoContainer>\r\n                {/* <img src={namedLogoLight} alt=\"fokus\" /> */}\r\n            {/* </AppTextLogoContainer>  */}\r\n        </MenuContainer>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskLabelSelect.js",["331"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TaskSelectInput = styled.select`\r\n    font-weight: bold;\r\n    text-align: center;\r\n    border:0;\r\n    background-color:${p=>p.theme.backgroundSecondary};\r\n    color:${p=>p.theme.primaryText};\r\n    option{\r\n        font-weight:bold;\r\n    }\r\n`;\r\n\r\nexport default function TaskLabel(p) {\r\n    const labels = useSelector((s) => s.tasks.labels);\r\n    const [updatedLabel, setUpdatedLabel] = useState(p.taskLabel);\r\n\r\n    return (\r\n        // <div style={{ height: \"100%\", width: 80 }}>\r\n        <TaskSelectInput\r\n        autoFocus\r\n            name=\"labels\"\r\n            onBlur={() => p.onBlur(p.taskId,p.taskLabel, updatedLabel)}\r\n            defaultValue={updatedLabel}\r\n            onChange={(e) => setUpdatedLabel(e.target.value)}\r\n            onKeyDown={(e) => (e.key === \"Enter\" ? p.onBlur(p.taskId,p.taskLabel, updatedLabel) : null)}\r\n        >\r\n            <option value=\"none\">none</option> \r\n            {/* keeping option:none at top makes it show up if taskLabel is null which is desired */}\r\n            {Object.keys(labels).map((e, idx) => (\r\n                <option style={{color:`${labels[e].color}`}} key={idx} value={e}>\r\n                    {e}\r\n                </option>\r\n            ))}\r\n        </TaskSelectInput>\r\n        // </div>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NewNoteButton.js",[],["332","333"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\focusBoard\\FocusBoard.js",["334"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\customIcons\\index.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\FocusBoard\\FocussedTask.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\TimeProgressCard.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\MusicVolumeControl.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\hooks\\useTimer.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\DashboardHero.js",["335","336","337"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\Navbar\\Navbar.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\taskBoard\\TaskBoard.js",["338","339","340"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateOrder } from \"./taskBoardSlice\";\r\nimport TaskCard from \"./../../components/TaskBoard/TaskCard\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Flipper } from \"react-flip-toolkit\";\r\nimport { focusOnTask } from \"./taskBoardSlice\";\r\nimport styled from \"styled-components\";\r\nimport TaskInput from \"./../../components/TaskBoard/TaskInput\";\r\nimport Divider from \"./../../components/TaskBoard/Divider\";\r\nimport NoTasks from \"../../components/TaskBoard/NoTasks\";\r\n\r\nconst TaskBoardContainer = styled.div`\r\n    flex: 1 1 0;\r\n    display: flex;\r\n    min-width: 396px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow-y: scroll; // to enable scrolling by default for this flex-container only\r\n`;\r\n\r\nconst EmptySpace = styled.div`\r\n    display: flex;\r\n    min-width: 10px;\r\n    min-height: 10px;\r\n    margin: 10px;\r\n`;\r\n\r\nexport function TaskBoard() {\r\n    const tasks = useSelector((state) => state.tasks.taskArray);\r\n    const meta = useSelector((state) => state.tasks.meta);\r\n    let focussedTask = meta.focussedTaskIndex !== -1 ? tasks[meta.focussedTaskIndex] : null;\r\n    const dispatch = useDispatch();\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n\r\n        let items = [...tasks.map((i) => ({ ...i }))];\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        let i = result.source.index;\r\n        let direction = result.destination.index > result.source.index; // direction true means moving right & swapping\r\n        // below is logic to reset globalKeys to maintain correct sort order.\r\n        // below is logic to reset globalKeys to maintain correct sort order.\r\n        // below is logic to reset globalKeys to maintain correct sort order.\r\n        while (i != result.destination.index) {\r\n            if (direction) {\r\n                items[i].globalKey = tasks[i].globalKey;\r\n                i++;\r\n            } else {\r\n                items[i].globalKey = tasks[i].globalKey;\r\n                i--;\r\n            }\r\n\r\n            if (i == result.destination.index) {\r\n                items[i].globalKey = tasks[i].globalKey;\r\n            }\r\n        }\r\n\r\n        if (meta.focussedTaskIndex !== -1) {\r\n            let greaterIndex = Math.max(result.destination.index, result.source.index);\r\n            let smallerIndex = Math.min(result.destination.index, result.source.index);\r\n\r\n            if (result.source.index === meta.focussedTaskIndex) {\r\n                dispatch(focusOnTask(result.destination.index));\r\n            } else if (meta.focussedTaskIndex >= smallerIndex && meta.focussedTaskIndex <= greaterIndex) {\r\n                if (result.destination.index > result.source.index) {\r\n                    dispatch(focusOnTask(meta.focussedTaskIndex - 1)); // -1\r\n                } else {\r\n                    dispatch(focusOnTask(meta.focussedTaskIndex + 1)); // +1\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(updateOrder(items)); // order is imp. focus then updateOrder\r\n    }\r\n\r\n    function getFlipKey() {\r\n        let flipKey = \"\";\r\n        tasks.forEach((i) => {\r\n            flipKey += `${i.globalKey}`;\r\n        });\r\n        flipKey += `${meta.completedTaskStartIndex}`;\r\n        return flipKey;\r\n    }\r\n\r\n    function isFocussed(id) {\r\n        if (focussedTask !== null && focussedTask.id === id) return true;\r\n        return false;\r\n    }\r\n\r\n    // input has both onChange and onKeyDown - can be optimised by using one and combining\r\n\r\n    return (\r\n        <TaskBoardContainer>\r\n            <TaskInput focussedTaskIndex={meta.focussedTaskIndex} />\r\n            {tasks.length === 0 ? <NoTasks /> : tasks.length === meta.completedTasksCount && <NoTasks allCompleted={true} />}\r\n            <Flipper flipKey={getFlipKey()}>\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                    <Droppable droppableId=\"dropArea\">\r\n                        {(provided) => (\r\n                            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {tasks.map((i, index) =>\r\n                                    !i.isCompleted ? (\r\n                                        <Draggable isDragDisabled={i.isCompleted} key={i.id} draggableId={`${i.id}`} index={index}>\r\n                                            {(provided2) => (\r\n                                                <TaskCard\r\n                                                    focussedTaskIndex={meta.focussedTaskIndex}\r\n                                                    focussedTaskGlobalKey={meta.focussedTaskIndex !== -1 ? tasks[meta.focussedTaskIndex].globalKey : -1}\r\n                                                    taskIndex={index}\r\n                                                    forwardRBDProvided={provided2}\r\n                                                    task={i}\r\n                                                    isFocussed={isFocussed(i.id)}\r\n                                                />\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )\r\n                                )}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n                {meta.completedTaskStartIndex !== -1 && <Divider />}\r\n\r\n                {meta.showCompletedTasks &&\r\n                    tasks.map((i, index) =>\r\n                        i.isCompleted ? (\r\n                            <TaskCard\r\n                                focussedTaskIndex={meta.focussedTaskIndex}\r\n                                focussedTaskGlobalKey={meta.focussedTaskIndex !== -1 ? tasks[meta.focussedTaskIndex].globalKey : -1}\r\n                                taskIndex={index}\r\n                                key={i.id}\r\n                                forwardRBDProvided={{ innerRef: null }}\r\n                                task={i}\r\n                                isFocussed={isFocussed(i.id)}\r\n                            />\r\n                        ) : (\r\n                            \"\"\r\n                        )\r\n                    )}\r\n            </Flipper>\r\n            <EmptySpace />\r\n        </TaskBoardContainer>\r\n    );\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\login\\LoginPage.js",["341","342"],"import React, { useState, useEffect } from 'react'\r\nimport { BsFillBackspaceFill } from 'react-icons/bs';\r\n// var fetch = require(\"fetch\");\r\n\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport \"../LoginPage.css\"\r\n// import \"../App1.css\"\r\nimport BackgroundImage from './login.png'\r\n\r\n\r\nexport default function LoginPage() {\r\n    let history = useHistory();\r\n\r\n\r\n    //body will send the data item but it will nto accept the data directly its need to convert it into the string\r\n    const [credentials, setCredentials] = useState({ email: \"\", password: \"\" })\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        // console.log(e)\r\n        e.preventDefault();\r\n        const response = await fetch(\"/api/user/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email: credentials.email, password: credentials.password })\r\n\r\n        });\r\n        const json = await response.json()\r\n        console.log(\"hello!!!\" + json)\r\n        // console.log(json.sucess)\r\n        if (json.sucess) {\r\n            //save the autheotkem and redirect      \r\n            localStorage.setItem('token', json.authtoken)\r\n            alert(\"User Login Successfully Welcome to dashboard!!\")\r\n            history.push(\"/dashboard\")\r\n\r\n        }\r\n        else {\r\n            alert(\"Invalid credential\")\r\n        }\r\n\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setCredentials({ ...credentials, [e.target.name]: e.target.value })\r\n\r\n    }\r\n\r\n    // creating auseState in which we change the state of the data\r\n    // const [user , setUser]   = useState({\r\n    //     name : \"\" ,email : \"\" , password : \"\"\r\n    // })\r\n    // let name , value;\r\n    // const handleInputs =(e)=>{\r\n    //     console.log(e) ;\r\n    //     name =  e.target.name; //email\r\n    //     value = e.target.value; //zaidkhan1681@gmail.com\r\n    //     setUser({... user, [name] : value}) //Here i am storin the data-value to the respected place of variable\r\n\r\n\r\n    // }//hooks setting the value\r\n\r\n    // const PostData = async(e) =>{\r\n    //     e.preventDefault(); //preventing from loading\r\n    //     //here by using the object destructring we are not getting the data int he form of user.email or user.password \r\n    //     //here we are simply fetching the data input by the user\r\n    //     const {name , email , password} = user //user from the useState\r\n    //     //putting the data at the backend using fetch\r\n    //     const response = await fetch(\"http://localhost:5000/api/user/login\",{\r\n    //         method : \"POST\" ,\r\n    //         header:{\r\n    //             \"Content-Type\" :\"application/json\"\r\n    //         } ,\r\n    //         body : JSON.stringify({\r\n    //             name,\r\n    //             email,\r\n    //             password\r\n    //         })\r\n\r\n    //     });\r\n    //     const json = await response.json()\r\n    //         console.log(json)\r\n\r\n\r\n\r\n    //     const data = await response.json();\r\n    //     if (data.status === 400 || !data){\r\n    //         window.alert(\"Invalid Registration\")\r\n    //         console.log(\"Invalid Registration\")\r\n\r\n    //     }\r\n    //     else{\r\n    //         window.alert(\"Login Success\")\r\n    //         console.log(\"Login Success\")\r\n    //         history.push(\"/dashboard\")\r\n\r\n    //     }\r\n\r\n\r\n\r\n    // }\r\n\r\n    const header = {\r\n        width: \"100%\",\r\n        height: \"150%\",\r\n        background: `url(${BackgroundImage})`,\r\n        backgroundPosition: \"top right\",\r\n        padding: \"0 px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"50% 50%\" //cover \r\n    }\r\n\r\n        const header2 = {\r\n            color: \"black\",\r\n        }\r\n    \r\n\r\n    return (\r\n        <div className=\"text-center m-5-auto\" style={header}>\r\n            <div className='text-left'>\r\n                <h2 style={header2} className=\"sign\">Sign In</h2>\r\n                <form method=\"POST\" onSubmit={handleSubmit} className=\"form\">\r\n                        <p>\r\n                            <label>Email address </label><br />\r\n                            <input type=\"text\" name=\"email\" value={credentials.email} onChange={onChange} />\r\n                        </p>\r\n                        <p>\r\n                            <label>Password</label>\r\n                            {/* <Link to=\"/forget-password\"><label className=\"right-label\">Forget password?</label></Link> */}\r\n                            <br />\r\n                            <input type=\"password\" name=\"password\" value={credentials.password} required onChange={onChange} />\r\n                        </p>\r\n                        <Link to=\"/dashboard\">\r\n                            <button className=\"secondary-button\" onClick={handleSubmit} >Log in</button>\r\n                        </Link>\r\n                </form>\r\n                <footer >\r\n                    <p className='footer1'>Need an account? <Link to=\"/register\">Signup</Link>.</p>\r\n                    <p className='footer2'><Link to=\"/\" className='secondary-button'>Homepage</Link>.</p>\r\n                </footer>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   // const history = useHistory();\r\n\r\n\r\n    // const [name , setName] = useState(\"\");\r\n    // const [email , setEmail] = useState(\"\");\r\n    // const [password , setPassword] = useState(\"\");\r\n\r\n    // useEffect(()=>{\r\n    //     if(localStorage.getItem('user-info')){\r\n    //         history.push(\"/dashboard\")\r\n    //     }\r\n    // })\r\n\r\n    // async function login(){\r\n    //     let item = { email , password}\r\n    //     console.log(item) ;\r\n    //    let result = await fetch(\"http://localhost:5000/api/user/login\" ,\r\n    //     {\r\n    //         method: \"POST\" ,\r\n    //         // url: \"/api/user/login\",\r\n    //         headers :{\r\n    //             'Content--Type' : 'application/json',\r\n    //             'Accept': \"application/json, text/plain, /\",\r\n    //             \"Accept\" : \"application/json\",\r\n    //             'Origin' : 'http://localhost:5000'\r\n    //         },\r\n    //         body : JSON.stringify({item})\r\n    //     });\r\n\r\n    //     result = await result.json();\r\n    //     localStorage.setItem(\"user-info \" , JSON.stringify(result))\r\n    //     history.push(\"/dashboard\")\r\n\r\n    // }","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\store\\localStorageUtils.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\taskBoard\\taskBoardSlice.js",["343","344","345","346","347"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\index.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\Divider.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\constants.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\DefaultTaskTime.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\dashboard\\DashboardMain.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NotesPreview.js",["348","349"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\notes\\NoteCard.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\dashBoard\\DayDate.js",["350"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\FocusBoard\\EmptyFocusBox.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\ProgressRings.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\App.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\mobileView\\index.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\index.js",["351","352","353","354","355","356","357","358","359","360","361","362"],"export function formattedTimeString(x) {\r\n    x = Math.floor(x / 1000);\r\n    let secs = x % 60;\r\n    let mins = Math.floor(x / 60);\r\n\r\n    if (secs == 0) {\r\n        secs = `00`;\r\n    } else if (secs < 10) {\r\n        secs = `0${secs}`;\r\n    }\r\n    if (mins == 0) {\r\n        mins = `00`;\r\n    } else if (mins < 10) {\r\n        mins = `0${mins}`;\r\n    }\r\n\r\n    return `${mins}:${secs}`;\r\n}\r\n\r\nexport function formattedTimeStringv2(x) {\r\n    x = Math.floor(x / 1000);\r\n    let secs = x % 60;\r\n    let mins = Math.floor(x / 60);\r\n\r\n    if (secs == 0) {\r\n        secs = `00`;\r\n    } else if (secs < 10) {\r\n        secs = `0${secs}`;\r\n    }\r\n    if (mins == 0) {\r\n        mins = `00`;\r\n    } else if (mins < 10) {\r\n        mins = `0${mins}`;\r\n    }\r\n\r\n    return { mins, secs };\r\n}\r\n\r\nexport function getFormattedDate() {\r\n    let d = new Date();\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    return {\r\n        day: days[d.getDay()],\r\n        month: months[d.getMonth()],\r\n        date: d.getDate(),\r\n        year: d.getFullYear(),\r\n    };\r\n}\r\n\r\nexport function getFormattedListTimeSummary(x) {\r\n    x = Math.floor(x / 1000);\r\n    let mins = Math.floor((x % 3600) / 60);\r\n    let hours = Math.floor(x / 3600);\r\n\r\n    if (mins == 0) {\r\n        mins = `00`;\r\n    } else if (mins < 10) {\r\n        mins = `0${mins}`;\r\n    }\r\n    if (hours == 0) {\r\n        hours = `0`;\r\n    } else if (hours < 10) {\r\n        hours = `${hours}`;\r\n    }\r\n\r\n    return { hours, mins };\r\n}\r\n\r\nexport function debounce(fn, wait) {\r\n    let t;\r\n    return function () {\r\n        clearTimeout(t);\r\n        t = setTimeout(() => fn.apply(this, arguments), wait);\r\n    };\r\n}\r\n\r\nexport function updatePageTitle(title) {\r\n    document.title = title;\r\n}\r\n\r\nexport function getOrdinalSuffix(i) {\r\n    let j = i % 10,\r\n        k = i % 100;\r\n    if (j == 1 && k != 11) {\r\n        return \"st\";\r\n    }\r\n    if (j == 2 && k != 12) {\r\n        return \"nd\";\r\n    }\r\n    if (j == 3 && k != 13) {\r\n        return \"rd\";\r\n    }\r\n    return \"th\";\r\n}\r\n\r\nconst MILLI_IN_30_DAYS = 2592000000;\r\nconst MILLI_IN_A_DAY = 86400000;\r\nconst MILLI_IN_A_HOUR = 3600000;\r\nconst MILLI_IN_A_MIN = 60000;\r\n\r\nexport function getTimeDifferenceForNotes(d1, d2) {\r\n    let difference = d2 - d1;\r\n\r\n    if (difference < MILLI_IN_A_HOUR) {\r\n        let minsGap = Math.floor(difference / MILLI_IN_A_MIN);\r\n        return minsGap === 0 ? `recently` : `${minsGap}mins ago`;\r\n    } else if (difference < MILLI_IN_A_DAY) {\r\n        let hoursGap = Math.floor(difference / MILLI_IN_A_HOUR);\r\n        if (hoursGap <= 1) return `${hoursGap}hr ago`;\r\n        else return `${hoursGap}hrs ago`;\r\n    } else if (difference < MILLI_IN_30_DAYS) {\r\n        let daysGap = Math.floor(difference / MILLI_IN_A_DAY);\r\n        if (daysGap <= 1) return `${daysGap}day ago`;\r\n        else return `${daysGap}days ago`;\r\n    } else {\r\n        return `30+days ago`;\r\n    }\r\n}\r\n","C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\TaskBoard\\TaskCard.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\quotes.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MiscBoard\\EmptyLabelPie.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\settings\\DefaultTaskLabel.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\containers\\notes\\index.js",["363"],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\helpers\\fokusUsageTips.js",[],"C:\\fokus3\\Productivity-App\\mini_project_main\\src\\components\\MusicBox\\musicUtils.js",[],{"ruleId":"364","severity":1,"message":"365","line":1,"column":28,"nodeType":"366","messageId":"367","endLine":1,"endColumn":37},{"ruleId":"368","severity":1,"message":"369","line":6,"column":14,"nodeType":"370","messageId":"371","endLine":6,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":11,"column":14,"nodeType":"370","messageId":"371","endLine":11,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":25,"column":14,"nodeType":"370","messageId":"371","endLine":25,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":30,"column":14,"nodeType":"370","messageId":"371","endLine":30,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":56,"column":14,"nodeType":"370","messageId":"371","endLine":56,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":61,"column":15,"nodeType":"370","messageId":"371","endLine":61,"endColumn":17},{"ruleId":"368","severity":1,"message":"369","line":85,"column":11,"nodeType":"370","messageId":"371","endLine":85,"endColumn":13},{"ruleId":"368","severity":1,"message":"372","line":85,"column":21,"nodeType":"370","messageId":"371","endLine":85,"endColumn":23},{"ruleId":"368","severity":1,"message":"369","line":88,"column":11,"nodeType":"370","messageId":"371","endLine":88,"endColumn":13},{"ruleId":"368","severity":1,"message":"372","line":88,"column":21,"nodeType":"370","messageId":"371","endLine":88,"endColumn":23},{"ruleId":"368","severity":1,"message":"369","line":91,"column":11,"nodeType":"370","messageId":"371","endLine":91,"endColumn":13},{"ruleId":"368","severity":1,"message":"372","line":91,"column":21,"nodeType":"370","messageId":"371","endLine":91,"endColumn":23},{"ruleId":"364","severity":1,"message":"373","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":23},{"ruleId":"374","severity":1,"message":"375","line":115,"column":21,"nodeType":"376","endLine":115,"endColumn":183},{"ruleId":"374","severity":1,"message":"375","line":120,"column":25,"nodeType":"376","endLine":120,"endColumn":59},{"ruleId":"374","severity":1,"message":"375","line":121,"column":25,"nodeType":"376","endLine":121,"endColumn":59},{"ruleId":"374","severity":1,"message":"375","line":122,"column":25,"nodeType":"376","endLine":122,"endColumn":59},{"ruleId":"364","severity":1,"message":"377","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":18},{"ruleId":"364","severity":1,"message":"378","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"364","severity":1,"message":"379","line":103,"column":36,"nodeType":"366","messageId":"367","endLine":103,"endColumn":61},{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","replacedBy":"383"},{"ruleId":"380","replacedBy":"384"},{"ruleId":"382","replacedBy":"385"},{"ruleId":"380","replacedBy":"386"},{"ruleId":"382","replacedBy":"387"},{"ruleId":"380","replacedBy":"388"},{"ruleId":"382","replacedBy":"389"},{"ruleId":"390","severity":1,"message":"391","line":157,"column":44,"nodeType":"366","endLine":157,"endColumn":55},{"ruleId":"380","replacedBy":"392"},{"ruleId":"382","replacedBy":"393"},{"ruleId":"364","severity":1,"message":"378","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"364","severity":1,"message":"373","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":23},{"ruleId":"364","severity":1,"message":"394","line":39,"column":7,"nodeType":"366","messageId":"367","endLine":39,"endColumn":27},{"ruleId":"374","severity":1,"message":"375","line":117,"column":21,"nodeType":"376","endLine":117,"endColumn":183},{"ruleId":"374","severity":1,"message":"375","line":122,"column":25,"nodeType":"376","endLine":122,"endColumn":59},{"ruleId":"374","severity":1,"message":"375","line":123,"column":25,"nodeType":"376","endLine":123,"endColumn":59},{"ruleId":"374","severity":1,"message":"375","line":124,"column":25,"nodeType":"376","endLine":124,"endColumn":59},{"ruleId":"364","severity":1,"message":"395","line":2,"column":23,"nodeType":"366","messageId":"367","endLine":2,"endColumn":34},{"ruleId":"380","replacedBy":"396"},{"ruleId":"382","replacedBy":"397"},{"ruleId":"364","severity":1,"message":"395","line":2,"column":23,"nodeType":"366","messageId":"367","endLine":2,"endColumn":34},{"ruleId":"364","severity":1,"message":"398","line":7,"column":10,"nodeType":"366","messageId":"367","endLine":7,"endColumn":26},{"ruleId":"364","severity":1,"message":"399","line":32,"column":7,"nodeType":"366","messageId":"367","endLine":32,"endColumn":21},{"ruleId":"364","severity":1,"message":"400","line":47,"column":7,"nodeType":"366","messageId":"367","endLine":47,"endColumn":14},{"ruleId":"364","severity":1,"message":"378","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"368","severity":1,"message":"372","line":47,"column":18,"nodeType":"370","messageId":"371","endLine":47,"endColumn":20},{"ruleId":"368","severity":1,"message":"369","line":56,"column":19,"nodeType":"370","messageId":"371","endLine":56,"endColumn":21},{"ruleId":"364","severity":1,"message":"365","line":1,"column":27,"nodeType":"366","messageId":"367","endLine":1,"endColumn":36},{"ruleId":"364","severity":1,"message":"401","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":29},{"ruleId":"368","severity":1,"message":"372","line":55,"column":52,"nodeType":"370","messageId":"371","endLine":55,"endColumn":54},{"ruleId":"368","severity":1,"message":"372","line":62,"column":64,"nodeType":"370","messageId":"371","endLine":62,"endColumn":66},{"ruleId":"368","severity":1,"message":"369","line":65,"column":64,"nodeType":"370","messageId":"371","endLine":65,"endColumn":66},{"ruleId":"368","severity":1,"message":"369","line":275,"column":56,"nodeType":"370","messageId":"371","endLine":275,"endColumn":58},{"ruleId":"368","severity":1,"message":"369","line":318,"column":56,"nodeType":"370","messageId":"371","endLine":318,"endColumn":58},{"ruleId":"364","severity":1,"message":"402","line":2,"column":23,"nodeType":"366","messageId":"367","endLine":2,"endColumn":34},{"ruleId":"364","severity":1,"message":"403","line":6,"column":24,"nodeType":"366","messageId":"367","endLine":6,"endColumn":30},{"ruleId":"364","severity":1,"message":"378","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"368","severity":1,"message":"369","line":6,"column":14,"nodeType":"370","messageId":"371","endLine":6,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":11,"column":14,"nodeType":"370","messageId":"371","endLine":11,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":25,"column":14,"nodeType":"370","messageId":"371","endLine":25,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":30,"column":14,"nodeType":"370","messageId":"371","endLine":30,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":56,"column":14,"nodeType":"370","messageId":"371","endLine":56,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":61,"column":15,"nodeType":"370","messageId":"371","endLine":61,"endColumn":17},{"ruleId":"368","severity":1,"message":"369","line":85,"column":11,"nodeType":"370","messageId":"371","endLine":85,"endColumn":13},{"ruleId":"368","severity":1,"message":"372","line":85,"column":21,"nodeType":"370","messageId":"371","endLine":85,"endColumn":23},{"ruleId":"368","severity":1,"message":"369","line":88,"column":11,"nodeType":"370","messageId":"371","endLine":88,"endColumn":13},{"ruleId":"368","severity":1,"message":"372","line":88,"column":21,"nodeType":"370","messageId":"371","endLine":88,"endColumn":23},{"ruleId":"368","severity":1,"message":"369","line":91,"column":11,"nodeType":"370","messageId":"371","endLine":91,"endColumn":13},{"ruleId":"368","severity":1,"message":"372","line":91,"column":21,"nodeType":"370","messageId":"371","endLine":91,"endColumn":23},{"ruleId":"364","severity":1,"message":"402","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":21},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'IoMdAnalytics' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'debounce' is defined but never used.","'useState' is defined but never used.","'setSoundscapeAudioElement' is assigned a value but never used.","no-native-reassign",["404"],"no-negated-in-lhs",["405"],["404"],["405"],["404"],["405"],["404"],["405"],"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.",["404"],["405"],"'AppTextLogoContainer' is assigned a value but never used.","'useDispatch' is defined but never used.",["404"],["405"],"'getFokusUsageTip' is defined but never used.","'FokusUsageTips' is assigned a value but never used.","'TipIcon' is assigned a value but never used.","'BsFillBackspaceFill' is defined but never used.","'useSelector' is defined but never used.","'create' is defined but never used.","no-global-assign","no-unsafe-negation"]